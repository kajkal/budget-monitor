{"version":3,"sources":["serviceWorker.js","services/logService.js","services/alertService.js","services/httpService.js","services/authService.js","components/common/forms/inputs/TextInput.jsx","components/common/forms/inputs/PasswordInput.jsx","components/common/forms/inputs/SelectInput.jsx","components/common/forms/inputs/CurrencyInput.jsx","components/common/forms/inputs/DateTimeInput.jsx","config/theme.js","config/propTypesCommon.js","services/entities-services/categoryService.js","config/fieldNames.js","components/common/lists/CategoryList.jsx","components/common/forms/inputs/CategoryInput.jsx","components/common/forms/inputs/DateInput.jsx","components/common/forms/Form.jsx","components/common/route/ProtectedRoute.jsx","services/errorMessageService.js","components/forms/LoginForm.jsx","components/Logout.jsx","components/NotFound.jsx","services/entities-services/userService.js","services/entities-services/currencyService.js","components/forms/RegisterForm.jsx","services/entities-services/entryService.js","components/common/dialogs/ConfirmationDialog.jsx","components/forms/EntryDeleteForm.jsx","components/forms/EntryForm.jsx","components/entry-list/EntryListItem.jsx","components/entry-list/EntryList.jsx","components/entry-list/EntryListRecent.jsx","components/common/menus/MenuOption.jsx","components/common/menus/DropDownMenu.jsx","components/common/menus/ButtonWithMenu.jsx","components/dialogs/UserOptionDialog.jsx","components/forms/CategoryForm.jsx","components/forms/CategoryDeleteForm.jsx","components/dialogs/CategoryOptionTab.jsx","components/dialogs/CategoryOptionDialog.jsx","components/navigation/NavigationLink.jsx","components/common/forms/inputs/CategoryCheckbox.jsx","components/common/lists/CategoryCheckboxList.jsx","components/forms/EntriesSelectionForm.jsx","components/navigation/Navbar.jsx","components/charts/ChartWrapper.jsx","components/charts/BarChart.jsx","components/charts/CalendarChart.jsx","components/charts/SunburstChart.jsx","services/chartService.js","components/error-boundaries/ErrorBoundary.jsx","components/charts/HourlyChart.jsx","components/charts/LineChart.jsx","App.js","services/languageService.js","index.js"],"names":["Boolean","window","location","hostname","match","logService","initialize","log","error","console","enqueueAlertFunction","displayAlert","message","variant","duration","arguments","length","undefined","action","react_default","a","createElement","IconButton_default","key","aria-label","color","Close_default","autoHideDuration","logger","AlertServiceComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","enqueueSnackbar","Component","withSnackbar","alertService","default","info","success","warning","axios","defaults","baseURL","process","interceptors","response","use","status","Promise","reject","httpService","get","post","put","delete","setJwt","jwt","headers","common","apiEndpoint","tokenType","tokenKey","_callee","username","password","_ref","regenerator_default","wrap","_context","prev","next","http","sent","data","localStorage","setItem","token","stop","getItem","concat","getJwtHeader","authService","login","loginWithJwt","logout","removeItem","getCurrentUser","jwtDecode","e","TextInput","name","label","onChange","rest","objectWithoutProperties","TextField_default","assign","autoComplete","_ref2","value","target","helperText","PasswordInput","state","showPassword","handleClickShowPassword","setState","_this$props","type","InputProps","endAdornment","InputAdornment_default","position","onClick","VisibilityOff_default","Visibility_default","PureComponent","SelectInput","options","select","map","option","MenuItem_default","CurrencyInput","currency","number_format_default","onValueChange","InputAdornment_InputAdornment_default","customInput","TextField","allowNegative","decimalScale","fixedDecimalScale","DateTimeInput","material_ui_pickers_esm","date","toISO","ampm","keyboard","autoOk","showTabs","leftArrowIcon","index_es","rightArrowIcon","keyboardIcon","format","mask","theme","createMuiTheme","typography","useNextVariants","palette","primary","main","secondary","lodashPath","PropTypes","arrayOf","oneOfType","string","number","categoryShape","shape","idCategory","isRequired","path","subCategories","idCategoryCategoryMap","dateShape","object","subEntryShape","idSubEntry","description","entryShape","idEntry","dateOfAddition","dateOfLastModification","subEntries","USERNAME","PASSWORD","EMAIL","CURRENCY","ID_ENTRY","VALUE","DESCRIPTION","DATE","SUB_ENTRIES","CATEGORY","ID_CATEGORY","NAME","entryUrl","categoryId","parseCategory","category","idSuperCategory","trim","addCategory","updateCategory","updatedCategory","deleteCategory","categoryNamesMap","Map","getCategoryName","getRootCategory","categories","rootCategory","processLevel","forEach","c","newPath","toConsumableArray","indexOf","set","push","getCategoryIds","ids","getCategoriesByType","find","getCategoryParent","categoryPath","parentPath","slice","_","getCategoryByIdCategory","CategoryList","handleToggleOpen","open","forceUpdate","renderCategory","depth","expandIcon","haveChildren","categoryDisabled","Fragment","ListItem_default","button","disabled","style","paddingLeft","event","onSelect","ListItemText_default","ListItemSecondaryAction_default","IconButton_IconButton_default","Collapse_default","in","timeout","unmountOnExit","List_default","dense","disablePadding","onlySubCategories","_this2","_this$props2","header","subHeader","ListSubheader_default","subheader","CategoryInput","handleOpen","handleClose","handleReset","handleSelectCategory","margin","autoFocus","className","resetDisabled","fullScreen","isResetDisabled","readOnly","onKeyPress","Dialog_default","scroll","maxWidth","fullWidth","onClose","aria-labelledby","DialogTitle","id","DialogContent","lists_CategoryList","DialogActions","Button_Button","withMobileDialog","breakpoint","DateInput","Form","errors","validationIgnoreList","validateProperty","obj","defineProperty","schema","Joi","validate","details","handleChange","objectSpread","errorMessage","last","unset","extendedOnInputChange","validateLevel","root","forOwn","isObject","includes","subObjectErrors","isEmpty","handleSubmit","doSubmit","onEnterDown","preventDefault","stopPropagation","renderButton","Button_default","Tooltip_default","title","enterDelay","leaveDelay","icon","tooltip","inputDetails","inputOptions","_inputOptions$focus","focus","_inputOptions$margin","inputs_TextInput","_inputOptions$focus2","_inputOptions$margin2","inputs_PasswordInput","_inputOptions$focus3","_inputOptions$margin3","inputs_SelectInput","_inputOptions$focus4","_inputOptions$margin4","inputs_CurrencyInput","_inputOptions$focus5","_inputOptions$margin5","inputs_DateTimeInput","_inputOptions$margin6","inputs_DateInput","_inputOptions$focus6","_inputOptions$margin7","inputs_CategoryInput","ProtectedRoute","component","render","Route","Redirect","to","pathname","from","INPUT_ERRORS_MAP","field","GENERAL_ERRORS_MAP","relatedFields","translateErrorMessage","inputErrors","validationErrors","split","input","getInputErrorMessages","generalError","getGeneralErrorMessage","LoginForm","_data","required","auth","t0","Paper_default","onKeyDown","renderTextInput","renderPasswordInput","renderSubmitButton","propTypes","Logout","NotFound","register","user","email","parseUser","currencies","RegisterForm","min","max","regex","minDomainAtoms","alphanum","renderSelectInput","entryId","parseEntry","entry","factor","toFixed","DateTime","fromISO","valueOf","values","subEntry","getEntriesBetween","toISODate","addEntry","updateEntry","deleteEntry","processEntriesDate","entries","fromMillis","processEntryDate","sort","items","fieldName","order","orderFactor","b","isEntryAndSelectionSpecValid","selectionSpec","filterEntryByCategory","selectedCategoriesType","selectedCategoriesIds","some","isEntryOfSelectedCategory","filterEntriesByCategory","isEntriesAndSelectionSpecValid","filter","content","onOk","disableBackdropClick","disableEscapeKeyDown","disableTypography","DialogContentText","EntryDeleteForm","handleOk","onEntriesChange","_this$state","dialogs_ConfirmationDialog","EntryForm","positive","precision","sumOfSubEntriesValues","reduce","Number","toString","isEqual","newMainCategory","se","_ref3","_response","handleAddSubEntry","_data$SUB_ENTRIES$val","Date","handleRemoveSubEntry","newEntryValue","renderNewSubEntryButton","size","renderSubEntriesArea","_this$state$data","keys","categoryDetails","renderCurrencyInput","renderCategoryInput","renderIconButton","Math","abs","_ref4","local","_this$props3","headerClassName","formTitle","submitButtonTitle","renderDateTimeInput","renderCancelButton","oneOf","bool","func","EntryListItem","operationType","formatValue","valueType","renderSubEntry","renderEntrySummary","fullDate","time","toLocaleString","DATETIME_MED","TIME_SIMPLE","ExpansionPanelSummary","renderEntryDetails","additionDate","modificationDate","ExpansionPanelDetails","renderEntryOptions","ExpansionPanelActions","ListItemIcon","handleEntryFormClose","renderDeleteEntryDialog","forms_EntryDeleteForm","renderEditEntryDialog","forms_EntryForm","ExpansionPanel","expanded","EntryList","entriesByDay","day","Typography","toFormat","entry_list_EntryListItem","marginTop","EntryListRecent","getRecentEntries","recentEntries","sortedRecentEntries","MenuOption","_ref$excluded","excluded","MenuItem_MenuItem","ListItemText_ListItemText","DropDownMenu","anchorEl","menuOptions","Popper","transition","disablePortal","placement","TransitionProps","Grow","Paper_Paper","ClickAwayListener","onClickAway","MenuList","index","esm_extends","menus_MenuOption","ButtonWithMenu","handleToggle","currentTarget","buttonLabel","buttonTooltip","Tooltip_Tooltip","aria-owns","aria-haspopup","textTransform","menus_DropDownMenu","UserOptionDialog","openTabId","handleTabChange","onEscapeKeyDown","Tabs","indicatorColor","textColor","centered","Tab","CategoryForm","isCategoryDisabled","editedCategory","onRootCategoryChange","superCategory","CategoryDeleteForm","CategoryOptionTab","selectedCategory","handleMenuOpen","handleMenuClose","handleBasicCategoryAddFormOpen","parentOfSelected","handleCategoryFormOpen","handleCategoryFormClose","renderOptionMenu","selectedCategoryIsBasicCategory","renderCategoryForm","forms_CategoryForm","renderDeleteCategoryDialog","forms_CategoryDeleteForm","categoryListRootCategory","CategoryOptionDialog","renderCategoryTab","tabId","categoryType","dialogs_CategoryOptionTab","withStyles","active","backgroundColor","selected","classes","ListItem_ListItem_default","NavLink","activeClassName","ListItemIcon_default","ListItemText_ListItemText_default","CategoryCheckbox","isOppositeCategorySelected","selectedCategories","slicedToArray","isCategorySelected","isCategoryChildOfSelectedCategory","isCategoryParentOfSelectedCategory","isCategoryRootCategory","getSelectedSubCategoriesCount","isAllSubCategoriesSelected","selectedSubCategoriesCount","getCheckboxProps","checked","handleCheckboxChange","handleRootCheckboxChange","indeterminate","currentSelectedCategories","onCheckboxChange","Checkbox","CategoryCheckboxList","isExpanded","currentExpandedCategories","expandedCategories","onCategoryExpandToggle","newSelectedCategories","onSelectedCategoriesChange","es_ListItem_ListItem","ListItemSecondaryAction_ListItemSecondaryAction","es_IconButton_IconButton","inputs_CategoryCheckbox","Collapse_Collapse","List_List","EntriesSelectionForm","getSelectionSpec","categoriesType","categoriesIds","getCategoriesIds","handleFromDateChange","newFrom","onSelectionSpecChange","handleToDateChange","newTo","handleSelectedCategoriesChange","now","minus","months","plus","days","defaultSelectedCategories","_this$state$data2","_this$state$errors","fromErrors","toErrors","lists_CategoryCheckboxList","Navbar","mobileOpen","incomeFormDialogOpen","expenseFormDialogOpen","userOptionDialogOpen","categoryOptionDialogOpen","newEntryOptions","userOptions","Link","handleDrawerToggle","handleCategoryExpandToggle","handleSelectionSpecChange","handleDialogClose","renderEntryFormDialog","renderUserOptionDialog","dialogs_UserOptionDialog","renderCategoryOptionDialog","dialogs_CategoryOptionDialog","_this$state2","children","drawer","Typography_default","drawerHeader","Divider_default","navigation_NavigationLink","forms_EntriesSelectionForm","AppBar_default","appBar","Toolbar_default","toolbar","menuButton","menus_ButtonWithMenu","sub","Hidden_default","mdUp","implementation","Drawer_default","container","anchor","direction","paper","drawerPaper","smDown","fakeToolbar","applicationContent","breakpoints","up","width","flexShrink","marginLeft","mixins","justifyContent","marginRight","display","alignItems","padding","flexGrow","flexDirection","withTheme","containerWrapper","minWidth","chartWrapper","height","withTitle","withTitleAndCaption","chartDescription","caption","_ref$fullWidth","chartWrapperClassName","element","join","wrapperOptions","BarChart","formattedDate","indexValue","dataStructure","groupMode","LinearProgress","timePeriod","charts_ChartWrapper","bar","indexBy","top","right","bottom","left","colors","colorBy","borderColor","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","x","labelSkipWidth","labelSkipHeight","labelTextColor","animate","motionStiffness","motionDamping","legends","dataFrom","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","CalendarChart","fromJSDate","renderCalendarChart","calendar","emptyColor","yearSpacing","monthBorderWidth","monthBorderColor","monthLegendOffset","monthLegend","year","month","dayBorderWidth","dayBorderColor","itemCount","incomeData","expenseData","rowsCount","maxHeight","SunburstChart","incomeTree","expenseTree","totalValue","sunburst","identity","cornerRadius","borderWidth","childColor","isInteractive","sumCategoryValuesInEntry","categoryIds","totalEntryValue","sum","ErrorBoundary","hasError","HourlyChart","pointId","handleMouseMove","point","handleMouseLeave","getSymbolSize","serie","error_boundaries_ErrorBoundary","scatterplot","xScale","yScale","orient","d","itemTextColor","symbolShape","onMouseMove","onMouseLeave","LineChart","y","line","stacked","dotSize","dotColor","dotBorderWidth","dotBorderColor","curve","enableDotLabel","dotLabel","dotLabelYOffset","symbolBorderColor","itemBackground","App","filteredEntries","fetchCategories","abrupt","fetchRecentEntries","_callee2","rawRecentEntries","_context2","handleRootCategoryChange","handleEntriesChange","filteredByDate","isEntryBetweenDates","filterEntryByDate","processEntry","filteredByCategory","operations","operation","currentEntries","currentFilteredEntries","_deleteEntry","o","newState","_callee3","currentSelectionSpec","currentFrom","currentTo","_ref6","rawEntries","_context3","Settings","defaultLocale","navigator","languages","userLanguage","language","browserLanguage","getNavigatorLanguage","_this$state3","core_styles","navigation_Navbar","Switch","route_ProtectedRoute","exact","entry_list_EntryList","dayEntriesMap","splitByDays","entry_list_EntryListRecent","charts_BarChart","timePeriodUnit","Interval","fromDateTimes","timePeriodEntriesMap","entriesByTimePeriod","selectedCategoryCategoryIdsMap","entriesForTimePeriod","dataSetForTimePeriod","prepareDataStructureForBarChart","charts_LineChart","categoryDataMap","categoryValue","dayValueMap","valueForDay","dataForCategory","prepareDataStructureForLineChart","charts_SunburstChart","incomeIdCategoryNodeMap","expenseIdCategoryNodeMap","mapCategoryToNode","node","mapValueToNode","computeTotalNodeValue","removeZeros","oldChildren","n","prepareDataStructureForSunburstChart","charts_HourlyChart","TIME_WITH_SECONDS","prepareDataStructureForHourlyChart","charts_CalendarChart","incomeDayValueMap","expenseDayValueMap","incomeDataArray","expenseDataArray","prepareDataStructureForCalendarChart","ReactDOM","BrowserRouter","utils","LuxonUtils","CssBaseline","build","maxSnack","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ae487ed.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import {init, captureException} from '@sentry/browser';\r\n\r\nfunction initialize() {\r\n    // init({\r\n    //     dsn: \"https://f1d1fe5d53a14ec3af4e62c3071a67b6@sentry.io/1329935\"\r\n    // });\r\n}\r\n\r\nfunction log(error) {\r\n    // captureException(error);\r\n    console.error(error)\r\n}\r\n\r\nexport default {\r\n    initialize,\r\n    log\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withSnackbar } from 'notistack';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport logger from './logService';\r\n\r\nlet enqueueAlertFunction = null;\r\n\r\nconst displayAlert = (message, variant, duration = 4000) => {\r\n    if (enqueueAlertFunction)\r\n        enqueueAlertFunction(message, {\r\n            variant: variant,\r\n            action: (\r\n                <IconButton\r\n                    key=\"close\"\r\n                    aria-label=\"Close\"\r\n                    color=\"inherit\"\r\n                >\r\n                    <CloseIcon />\r\n                </IconButton>\r\n            ),\r\n            autoHideDuration: duration,\r\n        });\r\n    else\r\n        logger.log('enqueueAlertFunction not initialized.');\r\n};\r\n\r\nclass AlertServiceComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        enqueueAlertFunction = this.props.enqueueSnackbar;\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nAlertServiceComponent.propTypes = {\r\n    enqueueSnackbar: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withSnackbar(AlertServiceComponent);\r\n\r\nexport const alertService = {\r\n    default: (message) => displayAlert(message, 'default'),\r\n    info: (message) => displayAlert(message, 'info', 2000),\r\n    success: (message) => displayAlert(message, 'success', 2000),\r\n    warning: (message) => displayAlert(message, 'warning'),\r\n    error: (message) => displayAlert(message, 'error', 6000)\r\n};\r\n","import axios from 'axios';\r\nimport logger from './logService';\r\nimport { alertService } from './alertService';\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, error => {\r\n    const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n\r\n    if (!expectedError) {\r\n        logger.log(error);\r\n        alertService.error('An unexpected error occurred');\r\n    }\r\n\r\n    return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n    axios.defaults.headers.common['Authorization'] = jwt;\r\n}\r\n\r\nexport default {\r\n    get: axios.get,\r\n    post: axios.post,\r\n    put: axios.put,\r\n    delete: axios.delete,\r\n    setJwt\r\n};\r\n","import jwtDecode from 'jwt-decode';\r\nimport http from './httpService';\r\n\r\nconst apiEndpoint = '/login';\r\nconst tokenType = 'Bearer';\r\nconst tokenKey = 'token';\r\n\r\nhttp.setJwt(getJwtHeader());\r\n\r\nasync function login(username, password) {\r\n    const { data: jwt } = await http.post(apiEndpoint, { username, password });\r\n    localStorage.setItem(tokenKey, jwt.token);\r\n}\r\n\r\nfunction loginWithJwt(jwt) {\r\n    localStorage.setItem(tokenKey, jwt.token);\r\n}\r\n\r\nfunction logout() {\r\n    localStorage.removeItem(tokenKey);\r\n}\r\n\r\nfunction getCurrentUser() {\r\n    try {\r\n        const jwt = localStorage.getItem(tokenKey);\r\n        return jwtDecode(jwt);\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\nfunction getJwtHeader() {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwt && `${tokenType} ${jwt}`;\r\n}\r\n\r\nexport default {\r\n    login,\r\n    loginWithJwt,\r\n    logout,\r\n    getCurrentUser\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\n\r\n\r\nconst TextInput = ({ name, label, onChange, error, ...rest }) => {\r\n    return (\r\n        <TextField\r\n            autoComplete={name}\r\n\r\n            name={name}\r\n            label={label}\r\n\r\n            onChange={({ target: { value } }) => onChange(value)}\r\n\r\n            error={error !== undefined}\r\n            helperText={error}\r\n\r\n            {...rest}\r\n        />\r\n    );\r\n};\r\n\r\nTextInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default TextInput;\r\n","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport PropTypes from 'prop-types';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\n\r\nclass PasswordInput extends PureComponent {\r\n    state = {\r\n        showPassword: false,\r\n    };\r\n\r\n    handleClickShowPassword = () => {\r\n        this.setState(state => ({ showPassword: !state.showPassword }));\r\n    };\r\n\r\n    render() {\r\n        const { name, label, error, onChange, ...rest } = this.props;\r\n        return (\r\n            <TextField\r\n                type={this.state.showPassword ? 'text' : 'password'}\r\n                autoComplete={name}\r\n\r\n                name={name}\r\n                label={label}\r\n\r\n                onChange={({ target: { value } }) => onChange(value)}\r\n\r\n                error={error !== undefined}\r\n                helperText={error}\r\n\r\n                {...rest}\r\n\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"Toggle password visibility\"\r\n                                onClick={this.handleClickShowPassword}\r\n                            >\r\n                                {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nPasswordInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default PasswordInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\r\n\r\n\r\nconst SelectInput = ({ name, label, options, onChange, error, ...rest }) => {\r\n    return (\r\n        <TextField\r\n            select={true}\r\n            autoComplete={name}\r\n\r\n            name={name}\r\n            label={label}\r\n\r\n            onChange={({ target: { value } }) => onChange(value)}\r\n\r\n            error={error !== undefined}\r\n            helperText={error}\r\n\r\n            {...rest}\r\n        >\r\n            {options.map(option => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                    {option.label}\r\n                </MenuItem>\r\n            ))}\r\n        </TextField>\r\n    );\r\n};\r\n\r\nSelectInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n\r\n    options: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            value: PropTypes.string.isRequired,\r\n            label: PropTypes.string.isRequired,\r\n        }),\r\n    ).isRequired,\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport NumberFormat from 'react-number-format';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport InputAdornment from '@material-ui/core/InputAdornment/InputAdornment';\r\n\r\n\r\nconst CurrencyInput = ({ name, label, currency, onChange, error, ...rest }) => {\r\n    return (\r\n        <NumberFormat\r\n            autoComplete={name}\r\n\r\n            name={name}\r\n            label={label}\r\n\r\n            onValueChange={({ value }) => onChange(value)}\r\n\r\n            error={error !== undefined}\r\n            helperText={error}\r\n\r\n            {...rest}\r\n\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">{currency}</InputAdornment>,\r\n            }}\r\n\r\n            customInput={TextField}\r\n            allowNegative={false}\r\n            decimalScale={2}\r\n            fixedDecimalScale={true}\r\n        />\r\n    );\r\n};\r\n\r\nCurrencyInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n\r\n    currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default CurrencyInput;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateTimePicker } from 'material-ui-pickers';\r\nimport { CalendarToday, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\n\r\n\r\nconst DateTimeInput = ({ name, label, onChange, error, ...rest }) => {\r\n    return (\r\n        <DateTimePicker\r\n            name={name}\r\n            label={label}\r\n\r\n            onChange={date => onChange(date.toISO())}\r\n\r\n            error={error !== undefined}\r\n            helperText={error}\r\n\r\n            {...rest}\r\n\r\n            ampm={false}\r\n            keyboard={true}\r\n            autoOk={true}\r\n            showTabs={false}\r\n\r\n            leftArrowIcon={<KeyboardArrowLeft />}\r\n            rightArrowIcon={<KeyboardArrowRight />}\r\n            keyboardIcon={<CalendarToday />}\r\n\r\n            format=\"dd.MM.yyyy HH:mm\"\r\n            mask={[\r\n                /\\d/, /\\d/, '.',\r\n                /\\d/, /\\d/, '.',\r\n                /\\d/, /\\d/, /\\d/, /\\d/, ' ',\r\n                /\\d/, /\\d/, ':', /\\d/, /\\d/,\r\n            ]}\r\n        />\r\n    );\r\n};\r\n\r\nDateTimeInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default DateTimeInput;\r\n","import { createMuiTheme } from '@material-ui/core';\r\n\r\nexport const theme = createMuiTheme({\r\n    typography: {\r\n        useNextVariants: true,\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#689f38',\r\n        },\r\n        secondary: {\r\n            main: '#86d7de',\r\n        },\r\n        error: {\r\n            main: '#ff1e23',\r\n        },\r\n    },\r\n});\r\n\r\nexport const formInputMargin = 'normal';\r\nexport const formInputFullWidth = false;\r\n\r\nexport const tooltipEnterDelay = 500;\r\nexport const tooltipLeaveDelay = 200;\r\n\r\n\r\n// [xs, sm, md, lg] 600, 960, 1280, 1920\r\nexport const mobileDialogBreakpoint = 'xs'; // 600px\r\nexport const desktopDialogMaxWidth = 'sm'; // 600px","import PropTypes from 'prop-types';\r\n\r\n\r\nexport const lodashPath = PropTypes.arrayOf(\r\n    PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.number,\r\n    ]),\r\n);\r\n\r\nexport const categoryShape = PropTypes.shape({\r\n    idCategory: PropTypes.number.isRequired,\r\n    path: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    lodashPath: lodashPath,\r\n    name: PropTypes.string.isRequired,\r\n});\r\ncategoryShape.subCategories = PropTypes.arrayOf(categoryShape).isRequired;\r\n\r\nexport const dateShape = PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.number,\r\n]);\r\n\r\nexport const subEntryShape = PropTypes.shape({\r\n    idSubEntry: PropTypes.number.isRequired,\r\n    idCategory: PropTypes.number.isRequired,\r\n    description: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n});\r\n\r\nexport const entryShape = PropTypes.shape({\r\n    idEntry: PropTypes.number.isRequired,\r\n    idCategory: PropTypes.number,\r\n    description: PropTypes.string.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n    date: dateShape.isRequired,\r\n    dateOfAddition: dateShape.isRequired,\r\n    dateOfLastModification: dateShape.isRequired,\r\n    subEntries: PropTypes.arrayOf(subEntryShape).isRequired,\r\n});\r\n","import http from '../httpService';\r\nimport { CATEGORY, ID_CATEGORY, NAME } from '../../config/fieldNames';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst apiEndpoint = '/categories';\r\n\r\nfunction entryUrl(categoryId) {\r\n    return `${apiEndpoint}/${categoryId}`;\r\n}\r\n\r\nfunction parseCategory(category) {\r\n    return ({\r\n        idSuperCategory: category[CATEGORY][ID_CATEGORY],\r\n        name: category[NAME].trim(),\r\n    });\r\n}\r\n\r\n\r\nexport function getCategories() {\r\n    return http.get(apiEndpoint);\r\n}\r\n\r\nexport function addCategory(category) {\r\n    return http.post(apiEndpoint, parseCategory(category));\r\n}\r\n\r\nexport function updateCategory(category, updatedCategory) {\r\n    return http.put(entryUrl(category[ID_CATEGORY]), parseCategory(updatedCategory));\r\n}\r\n\r\nexport function deleteCategory(category) {\r\n    return http.delete(entryUrl(category[ID_CATEGORY]));\r\n}\r\n\r\n\r\n\r\n// DATA OPERATIONS:\r\n\r\nlet idCategoryCategoryMap;\r\n\r\nconst categoryNamesMap = new Map([\r\n    ['ROOT_CATEGORY', 'All categories'],\r\n    ['INCOME_CATEGORY', 'Income categories'],\r\n    ['EXPENSE_CATEGORY', 'Expense categories'],\r\n]);\r\n\r\nexport function getCategoryName(category) {\r\n    const name = categoryNamesMap.get(category.name);\r\n    return name || category.name;\r\n}\r\n\r\nexport function getRootCategory(categories) {\r\n    const processLevel = (category, path) => {\r\n        category.subCategories.forEach(c => {\r\n            const newPath = [ ...path, 'subCategories', category.subCategories.indexOf(c)];\r\n            c.lodashPath = newPath;\r\n            idCategoryCategoryMap.set(c.idCategory, c);\r\n            processLevel(c, newPath);\r\n        });\r\n    };\r\n    const addUncategorizedSubCategory = category => {\r\n        category.subCategories.push({\r\n            idCategory: 0,\r\n            path: [1, category.idCategory],\r\n            name: 'Uncategorized',\r\n            subCategories: [],\r\n            lodashPath: [ ...category.lodashPath, 'subCategories', category.subCategories.length],\r\n        });\r\n    };\r\n\r\n    const rootCategory = categories;\r\n    idCategoryCategoryMap = new Map();\r\n    processLevel(rootCategory, []);\r\n    rootCategory.subCategories.forEach(c => addUncategorizedSubCategory(c));\r\n    return rootCategory;\r\n}\r\n\r\nexport function getCategoryIds(category) {\r\n    const processLevel = (category, ids) => {\r\n        ids.push(category.idCategory);\r\n        category.subCategories.forEach(c => processLevel(c, ids));\r\n        return ids;\r\n    };\r\n\r\n    return processLevel(category, []);\r\n}\r\n\r\nexport function getCategoriesIds(categories) {\r\n    if (!categories) return [];\r\n    const processLevel = (category, ids) => {\r\n        ids.push(category.idCategory);\r\n        category.subCategories.forEach(c => processLevel(c, ids));\r\n    };\r\n    const categoriesIds = [];\r\n    categories.forEach(c => processLevel(c, categoriesIds));\r\n    return categoriesIds;\r\n}\r\n\r\nexport function getCategoriesByType(rootCategory, type) {\r\n    const name = type === 'income' ? 'INCOME_CATEGORY' : 'EXPENSE_CATEGORY';\r\n    if (!rootCategory || !rootCategory.subCategories) return null;\r\n    return rootCategory.subCategories.find(c => c.name === name);\r\n}\r\n\r\nexport function getCategoryParent(rootCategory, categoryPath) {\r\n    const parentPath = categoryPath.slice(0, categoryPath.length - 2);\r\n    return _.get(rootCategory, parentPath);\r\n}\r\n\r\nexport function getCategoryByIdCategory(idCategory) {\r\n    if (!idCategoryCategoryMap) return null;\r\n    return idCategoryCategoryMap.get(idCategory);\r\n}\r\n\r\n","export const USERNAME = 'username';\r\nexport const PASSWORD = 'password';\r\nexport const EMAIL = 'email';\r\nexport const CURRENCY = 'currency';\r\n\r\n\r\nexport const ID_ENTRY = 'idEntry';\r\nexport const VALUE = 'value';\r\nexport const DESCRIPTION = 'description';\r\nexport const DATE = 'date';\r\nexport const SUB_ENTRIES = 'subEntries';\r\n\r\n\r\nexport const CATEGORY = 'category';\r\nexport const ID_CATEGORY = 'idCategory';\r\nexport const NAME = 'name';\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport List from '@material-ui/core/List';\r\nimport { categoryShape } from '../../../config/propTypesCommon';\r\nimport { getCategoryName } from '../../../services/entities-services/categoryService';\r\n\r\n\r\nclass CategoryList extends PureComponent {\r\n    \r\n    componentDidMount() {\r\n        const { rootCategory, onlySubCategories } = this.props;\r\n        if (!onlySubCategories) {\r\n            rootCategory.open = true;\r\n            this.forceUpdate();\r\n        }\r\n    }\r\n\r\n    handleToggleOpen = category => {\r\n        category.open = !category.open;\r\n        this.forceUpdate();\r\n    };\r\n\r\n    renderCategory = (category, depth) => {\r\n        const expandIcon = category.open ? <ExpandLess /> : <ExpandMore />;\r\n        const haveChildren = category.subCategories.length > 0;\r\n        const categoryDisabled = this.props.categoryDisabled && this.props.categoryDisabled(category);\r\n\r\n        if (category.idCategory === 0) return null;\r\n        return (\r\n            <React.Fragment key={category.idCategory}>\r\n\r\n                <ListItem button disabled={categoryDisabled} style={{paddingLeft: depth*20+16}} onClick={event => this.props.onSelect(category, event)}>\r\n\r\n                    <ListItemText primary={getCategoryName(category)} />\r\n\r\n                    {\r\n                        haveChildren && (\r\n                            <ListItemSecondaryAction>\r\n                                <IconButton onClick={() => this.handleToggleOpen(category)}>\r\n                                    {expandIcon}\r\n                                </IconButton>\r\n                            </ListItemSecondaryAction>\r\n                        )\r\n                    }\r\n\r\n                </ListItem>\r\n\r\n                {\r\n                    haveChildren && (\r\n                        <Collapse in={category.open} timeout='auto' unmountOnExit>\r\n                            <List\r\n                                dense={this.props.dense}\r\n                                disablePadding={true}\r\n                            >\r\n                                {category.subCategories.map(c => this.renderCategory(c, depth+1))}\r\n                            </List>\r\n                        </Collapse>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        )\r\n    };\r\n\r\n    render() {\r\n        const { header, rootCategory, onlySubCategories, dense } = this.props;\r\n        const subHeader = header && <ListSubheader>{header}</ListSubheader>;\r\n\r\n        return (\r\n            <List\r\n                dense={dense}\r\n                subheader={subHeader}\r\n            >\r\n\r\n                {\r\n                    onlySubCategories ?\r\n                        rootCategory.subCategories.map(c => this.renderCategory(c, 0))\r\n                        :\r\n                        this.renderCategory(rootCategory, 0)\r\n                }\r\n\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryList.propTypes = {\r\n    rootCategory: categoryShape.isRequired,\r\n    onlySubCategories: PropTypes.bool,\r\n    header: PropTypes.string,\r\n    onSelect: PropTypes.func.isRequired,\r\n    dense: PropTypes.bool,\r\n    categoryDisabled: PropTypes.func,\r\n};\r\n\r\nexport default CategoryList;\r\n","import React, { PureComponent } from 'react';\r\nimport TextField from '@material-ui/core/TextField/TextField';\r\nimport Dialog from '@material-ui/core/Dialog/Dialog';\r\nimport withMobileDialog from '@material-ui/core/withMobileDialog/withMobileDialog';\r\nimport PropTypes from 'prop-types';\r\nimport CategoryList from '../../lists/CategoryList';\r\nimport DialogTitle from '@material-ui/core/es/DialogTitle/DialogTitle';\r\nimport DialogContent from '@material-ui/core/es/DialogContent/DialogContent';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport DialogActions from '@material-ui/core/es/DialogActions/DialogActions';\r\nimport { categoryShape } from '../../../../config/propTypesCommon';\r\nimport { getCategoryName } from '../../../../services/entities-services/categoryService';\r\nimport { desktopDialogMaxWidth, mobileDialogBreakpoint } from '../../../../config/theme';\r\n\r\n\r\nclass CategoryInput extends PureComponent {\r\n    state = {\r\n        open: false,\r\n    };\r\n\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    handleReset = () => {\r\n        this.setState({ open: false });\r\n        this.props.onChange({});\r\n    };\r\n\r\n    handleSelectCategory = category => {\r\n        this.setState({ open: false });\r\n        this.props.onChange(category);\r\n    };\r\n\r\n    render() {\r\n        const { name, label, value, margin, autoFocus, className, error } = this.props;\r\n        const { rootCategory, onlySubCategories, header, categoryDisabled, resetDisabled, fullScreen } = this.props;\r\n\r\n        const isResetDisabled = resetDisabled || !value.name;\r\n\r\n        return (\r\n            <React.Fragment>\r\n            <TextField\r\n                autoComplete={name}\r\n\r\n                name={name}\r\n                label={label}\r\n\r\n                error={error !== undefined}\r\n                helperText={error}\r\n\r\n                margin={margin}\r\n                autoFocus={autoFocus}\r\n\r\n                className={className}\r\n\r\n                value={getCategoryName(value) || ''}\r\n                InputProps={{\r\n                    readOnly: true,\r\n                }}\r\n\r\n                onClick={this.handleOpen}\r\n                onKeyPress={this.handleOpen}\r\n            />\r\n\r\n                <Dialog\r\n                    fullScreen={fullScreen}\r\n                    scroll={'body'}\r\n                    maxWidth={desktopDialogMaxWidth}\r\n                    fullWidth={true}\r\n\r\n                    open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    aria-labelledby='category-input-dialog'\r\n                >\r\n\r\n                    <DialogTitle id='category-input-dialog'>\r\n                        Select category\r\n                    </DialogTitle>\r\n\r\n                    <DialogContent>\r\n                        <CategoryList\r\n                            rootCategory={rootCategory}\r\n                            onlySubCategories={onlySubCategories}\r\n                            header={header}\r\n                            categoryDisabled={categoryDisabled}\r\n                            onSelect={this.handleSelectCategory}\r\n                        />\r\n                    </DialogContent>\r\n\r\n                    <DialogActions>\r\n                        <Button disabled={isResetDisabled} onClick={this.handleReset} color='primary'>\r\n                            Reset\r\n                        </Button>\r\n                        <Button onClick={this.handleClose} color='primary' autoFocus>\r\n                            Cancel\r\n                        </Button>\r\n                    </DialogActions>\r\n\r\n                </Dialog>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([categoryShape, PropTypes.shape({})]).isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    autoFocus: PropTypes.bool.isRequired,\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n\r\n    rootCategory: categoryShape.isRequired,\r\n    onlySubCategories: PropTypes.bool.isRequired,\r\n    header: PropTypes.string,\r\n    categoryDisabled: PropTypes.func,\r\n    resetDisabled: PropTypes.bool,\r\n\r\n    fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: mobileDialogBreakpoint })(CategoryInput);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DatePicker  } from 'material-ui-pickers';\r\nimport { CalendarToday, KeyboardArrowLeft, KeyboardArrowRight } from '@material-ui/icons';\r\n\r\n\r\nconst DateInput = ({ name, label, onChange, error, ...rest }) => {\r\n    return (\r\n        <DatePicker\r\n            name={name}\r\n            label={label}\r\n\r\n            onChange={date => onChange(date.toISO())}\r\n\r\n            error={error !== undefined}\r\n            helperText={error}\r\n\r\n            {...rest}\r\n\r\n            autoOk={true}\r\n\r\n            leftArrowIcon={<KeyboardArrowLeft />}\r\n            rightArrowIcon={<KeyboardArrowRight />}\r\n            keyboardIcon={<CalendarToday />}\r\n\r\n            format='dd.MM.yyyy'\r\n            mask={[\r\n                /\\d/, /\\d/, '.',\r\n                /\\d/, /\\d/, '.',\r\n                /\\d/, /\\d/, /\\d/, /\\d/,\r\n            ]}\r\n        />\r\n    );\r\n};\r\n\r\nDateInput.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string,\r\n\r\n    margin: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default DateInput;\r\n","import React, { PureComponent } from 'react';\r\nimport Joi from 'joi-browser';\r\nimport _ from 'lodash';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton/IconButton';\r\nimport TextInput from './inputs/TextInput';\r\nimport PasswordInput from './inputs/PasswordInput';\r\nimport SelectInput from './inputs/SelectInput';\r\nimport CurrencyInput from './inputs/CurrencyInput';\r\nimport DateTimeInput from './inputs/DateTimeInput';\r\nimport { formInputMargin } from '../../../config/theme';\r\nimport CategoryInput from './inputs/CategoryInput';\r\nimport DateInput from './inputs/DateInput';\r\n\r\n\r\nclass Form extends PureComponent {\r\n    state = {\r\n        data: {},\r\n        errors: {},\r\n    };\r\n\r\n    validationIgnoreList = [];\r\n\r\n    validateProperty = (name, value) => {\r\n        const obj = { [name]: value };\r\n        const schema = { [name]: this.schema[name] };\r\n        const { error } = Joi.validate(obj, schema);\r\n        return error ? error.details[0].message : null;\r\n    };\r\n\r\n    handleChange = path => value => {\r\n        let errors = { ...this.state.errors };\r\n        const errorMessage = this.validateProperty(_.last(path), value);\r\n\r\n        if (errorMessage) _.set(errors, path, errorMessage);\r\n        else _.unset(errors, path);\r\n\r\n        let data = { ...this.state.data };\r\n        _.set(data, path, value);\r\n\r\n        this.extendedOnInputChange && this.extendedOnInputChange(path, data, errors);\r\n        this.setState({ data, errors });\r\n    };\r\n\r\n    validate = () => {\r\n        const validateLevel = (root) => {\r\n            const errors = {};\r\n\r\n            _.forOwn(root, (value, key) => {\r\n                if (_.isObject(value) && !this.validationIgnoreList.includes(key)) {\r\n                    const subObjectErrors = validateLevel(value);\r\n                    if (subObjectErrors) errors[key] = subObjectErrors;\r\n                } else {\r\n                    const errorMessage = this.validateProperty(key, value);\r\n                    if (errorMessage) errors[key] = errorMessage;\r\n                }\r\n            });\r\n\r\n            return _.isEmpty(errors) ? null : errors;\r\n        };\r\n\r\n        return validateLevel(this.state.data);\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        const errors = this.validate();\r\n        this.setState({ errors: errors || {} });\r\n        if (errors) return;\r\n\r\n        this.doSubmit();\r\n    };\r\n\r\n    onEnterDown = event => {\r\n        if (event.key === 'Enter') {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            if (this.validate() === null)\r\n                this.doSubmit();\r\n        }\r\n    };\r\n\r\n    renderSubmitButton(label) {\r\n        const renderButton = (disabled = false) => (\r\n            <Button disabled={disabled} color='primary' className='submit-button' onClick={this.handleSubmit}>\r\n                {label}\r\n            </Button>\r\n        );\r\n\r\n        const disabled = this.validate() !== null;\r\n        if (disabled) {\r\n            return (\r\n                <Tooltip title='First, you must fill out this form' enterDelay={500} leaveDelay={200}>\r\n                    <div>\r\n                        {renderButton(true)}\r\n                    </div>\r\n                </Tooltip>\r\n            );\r\n        }\r\n        else return renderButton();\r\n    }\r\n\r\n    renderCancelButton(onClick) {\r\n        return (\r\n            <Button color='primary' className='cancel-button' onClick={onClick}>\r\n                Cancel\r\n            </Button>\r\n        );\r\n    }\r\n\r\n    renderIconButton(icon, onClick, tooltip, className) {\r\n        return (\r\n            <Tooltip title={tooltip} enterDelay={500} leaveDelay={200}>\r\n                <IconButton className={className} onClick={onClick}>\r\n                    {icon}\r\n                </IconButton>\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    renderTextInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path);\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        // const {} = inputDetails;\r\n        const {className, focus = false, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <TextInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                error={error}\r\n                className={className}\r\n                autoFocus={focus}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderPasswordInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path);\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        // const {} = inputDetails;\r\n        const {className, focus = false, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <PasswordInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                className={className}\r\n                error={error}\r\n                autoFocus={focus}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderSelectInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path);\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        const { options } = inputDetails;\r\n        const {className, focus = false, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <SelectInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                options={options}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                className={className}\r\n                error={error}\r\n                autoFocus={focus}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCurrencyInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path);\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        const { currency } = inputDetails;\r\n        const {className, focus = false, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <CurrencyInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                error={error}\r\n                className={className}\r\n                autoFocus={focus}\r\n                currency={currency}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderDateTimeInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path);\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        // const {} = inputDetails;\r\n        const {className, focus = false, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <DateTimeInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                className={className}\r\n                error={error}\r\n                autoFocus={focus}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderDateInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path);\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        // const {} = inputDetails;\r\n        const {className, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <DateInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                className={className}\r\n                error={error}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderCategoryInput(path, label, inputDetails, inputOptions) {\r\n        const value = _.get(this.state.data, path); // whole category object\r\n        const error = _.get(this.state.errors, path);\r\n\r\n        const {rootCategory, onlySubCategories, header, categoryDisabled, resetDisabled } = inputDetails;\r\n        const {className, focus = false, margin = formInputMargin} = inputOptions;\r\n\r\n        return (\r\n            <CategoryInput\r\n                name={_.last(path)}\r\n                label={label}\r\n                value={value}\r\n                onChange={this.handleChange(path)}\r\n                error={error}\r\n\r\n                rootCategory={rootCategory}\r\n                onlySubCategories={onlySubCategories}\r\n                header={header}\r\n                categoryDisabled={categoryDisabled}\r\n                resetDisabled={resetDisabled}\r\n\r\n                className={className}\r\n                autoFocus={focus}\r\n                margin={margin}\r\n            />\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport authService from '../../../services/authService';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={props => {\r\n                if (!authService.getCurrentUser()) return <Redirect to={{\r\n                    pathname: '/login',\r\n                    state: { from: props.location }\r\n                }} />;\r\n                return Component ? <Component {...props} /> : render(props);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.func,\r\n    render: PropTypes.func,\r\n    path: PropTypes.string.isRequired\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import {EMAIL, PASSWORD, USERNAME} from '../config/fieldNames';\r\nimport {alertService} from './alertService';\r\n\r\nconst ACCESS_DENIED = 'Access Denied';\r\n\r\nconst LOGIN_ERROR_UNAUTHORIZED = 'login.error.unauthorized';\r\nconst LOGIN_ERROR_BAD_CREDENTIAL = 'login.error.badCredentials';\r\n\r\nconst REGISTER_ERROR_USERNAME_EXISTS = 'register.error.usernameExists';\r\nconst REGISTER_ERROR_EMAIL_EXISTS = 'register.error.emailExists';\r\nconst REGISTER_ERROR_BAD_REQUEST = 'userData.error.badRequest';\r\nconst REGISTER_UNKNOWN_ERROR = 'userData.error.unknownError';\r\n\r\nconst ENTRY_ERROR_UNAUTHORIZED = 'entryData.error.unauthorised';\r\nconst ENTRY_ERROR_ENTRY_NOT_FOUND = 'entryData.error.entryNotFound';\r\nconst ENTRY_ERROR_BAD_REQUEST = 'entryData.error.badRequest';\r\nconst ENTRY_UNKNOWN_ERROR = 'entryData.error.unknownError';\r\n\r\nconst CATEGORY_ERROR_UNAUTHORIZED = 'categoryData.error.unauthorised';\r\nconst CATEGORY_ERROR_CATEGORY_NOT_FOUND = 'categoryData.error.entryNotFound';\r\nconst CATEGORY_ERROR_BAD_REQUEST = 'categoryData.error.badRequest';\r\nconst CATEGORY_UNKNOWN_ERROR = 'categoryData.error.unknownError';\r\n\r\n\r\nconst INPUT_ERRORS_MAP = new Map([\r\n    [REGISTER_ERROR_USERNAME_EXISTS, {\r\n        field: USERNAME,\r\n        message: 'Sorry, that username already exists.',\r\n    }],\r\n\r\n    [REGISTER_ERROR_EMAIL_EXISTS, {\r\n        field: EMAIL,\r\n        message: 'Sorry, that email already exists.',\r\n    }],\r\n]);\r\n\r\nconst GENERAL_ERRORS_MAP = new Map([\r\n    [ACCESS_DENIED, {\r\n        relatedFields: [],\r\n        message: 'Access Denied.',\r\n    }],\r\n\r\n    [LOGIN_ERROR_UNAUTHORIZED, {\r\n        relatedFields: [],\r\n        message: 'You must be logged in first.',\r\n    }],\r\n\r\n    [LOGIN_ERROR_BAD_CREDENTIAL, {\r\n        relatedFields: [USERNAME, PASSWORD],\r\n        message: 'Bad username or password.',\r\n    }],\r\n\r\n    [REGISTER_ERROR_BAD_REQUEST, {\r\n        relatedFields: [],\r\n        message: 'Bad request format.',\r\n    }],\r\n\r\n    [REGISTER_UNKNOWN_ERROR, {\r\n        relatedFields: [],\r\n        message: 'Unknown error occurred.',\r\n    }],\r\n\r\n    [ENTRY_ERROR_UNAUTHORIZED, {\r\n        relatedFields: [],\r\n        message: 'You are not authorized to perform that operation.',\r\n    }],\r\n\r\n    [ENTRY_ERROR_ENTRY_NOT_FOUND, {\r\n        relatedFields: [],\r\n        message: 'Entry not found.',\r\n    }],\r\n\r\n    [ENTRY_ERROR_BAD_REQUEST, {\r\n        relatedFields: [],\r\n        message: 'Bad request format.',\r\n    }],\r\n\r\n    [ENTRY_UNKNOWN_ERROR, {\r\n        relatedFields: [],\r\n        message: 'Unknown error occurred.',\r\n    }],\r\n\r\n    [CATEGORY_ERROR_UNAUTHORIZED, {\r\n        relatedFields: [],\r\n        message: 'You are not authorized to perform that operation.',\r\n    }],\r\n\r\n    [CATEGORY_ERROR_CATEGORY_NOT_FOUND, {\r\n        relatedFields: [],\r\n        message: 'Category not found.',\r\n    }],\r\n\r\n    [CATEGORY_ERROR_BAD_REQUEST, {\r\n        relatedFields: [],\r\n        message: 'Bad request format.',\r\n    }],\r\n\r\n    [CATEGORY_UNKNOWN_ERROR, {\r\n        relatedFields: [],\r\n        message: 'Unknown error occurred.',\r\n    }],\r\n]);\r\n\r\nfunction getInputErrorMessages(message) {\r\n    const errors = {};\r\n\r\n    const validationErrors = message.match(/notValid\\[(.*)]/);\r\n    if (validationErrors && validationErrors[1]) {\r\n        const invalidInputs = validationErrors[1].split(',');\r\n        invalidInputs.forEach(input => errors[input] = 'Provided inputs are not valid.');\r\n    } else {\r\n        const error = INPUT_ERRORS_MAP.get(message);\r\n        if (error) errors[error.field] = error.message;\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nfunction getGeneralErrorMessage(message) {\r\n    const errors = {};\r\n    const error = GENERAL_ERRORS_MAP.get(message);\r\n    if (error) {\r\n        alertService.error(error.message);\r\n        error.relatedFields.forEach(field => errors[field] = null);\r\n    }\r\n    return errors;\r\n}\r\n\r\nexport function translateErrorMessage(message) {\r\n    const inputErrors = getInputErrorMessages(message);\r\n    const generalError = getGeneralErrorMessage(message);\r\n    return { ...inputErrors, ...generalError };\r\n}\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport Joi from 'joi-browser';\r\nimport Paper from '@material-ui/core/Paper/Paper';\r\nimport Form from '../common/forms/Form';\r\nimport ProtectedRoute from '../common/route/ProtectedRoute';\r\nimport { PASSWORD, USERNAME } from '../../config/fieldNames';\r\nimport { translateErrorMessage } from '../../services/errorMessageService';\r\nimport auth from '../../services/authService';\r\n\r\n\r\nclass LoginForm extends Form {\r\n    state = {\r\n        data: {\r\n            [USERNAME]: '',\r\n            [PASSWORD]: '',\r\n        },\r\n        errors: {},\r\n    };\r\n\r\n    schema = {\r\n        [USERNAME]: Joi.string()\r\n            .required()\r\n            .label('Username'),\r\n        [PASSWORD]: Joi.string()\r\n            .required()\r\n            .label('Password'),\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;\r\n            await auth.login(data[USERNAME], data[PASSWORD]);\r\n\r\n            const { state } = this.props.location;\r\n            window.location = state ? state.from.pathname : '/';\r\n        } catch (e) {\r\n            if (e.response && [400, 401].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (auth.getCurrentUser()) return <Redirect to='/' />;\r\n\r\n        return (\r\n            <Paper className='form-container'>\r\n\r\n                <form autoComplete='on' onKeyDown={this.onEnterDown}>\r\n                    <header className='form-header'>\r\n                        Login\r\n                    </header>\r\n\r\n                    <div className='form-content login-form'>\r\n                        {this.renderTextInput([USERNAME], 'Username', {}, {className: 'username-input', focus: true})}\r\n                        {this.renderPasswordInput([PASSWORD], 'Password', {}, {className: 'password-input'})}\r\n                    </div>\r\n\r\n                    <footer>\r\n                        {this.renderSubmitButton('Login')}\r\n                    </footer>\r\n                </form>\r\n\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nProtectedRoute.propTypes = {\r\n    location: PropTypes.object,\r\n};\r\n\r\nexport default LoginForm;\r\n","import { PureComponent } from 'react';\r\nimport auth from '../services/authService';\r\n\r\nclass Logout extends PureComponent {\r\n    componentDidMount() {\r\n        auth.logout();\r\n        window.location = '/';\r\n    }\r\n\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default Logout;\r\n","import React from 'react';\n\nconst NotFound = () => {\n    return <h1 style={{ margin: '48px auto' }}>404 Not Found</h1>;\n};\n\nexport default NotFound;\n","import http from '../httpService';\r\nimport { CURRENCY, EMAIL, PASSWORD, USERNAME } from '../../config/fieldNames';\r\n\r\nconst apiEndpoint = '/users';\r\n\r\n// function userUrl(userId) {\r\n//     return `${apiEndpoint}/${userId}`;\r\n// }\r\n\r\nfunction parseUser(user) {\r\n    return ({\r\n        username: user[USERNAME].trim(),\r\n        email: user[EMAIL].trim(),\r\n        password: user[PASSWORD].trim(),\r\n        currency: user[CURRENCY],\r\n    });\r\n}\r\n\r\n\r\nexport function register(user) {\r\n    return http.post(apiEndpoint, parseUser(user));\r\n}\r\n","const currencies = [\r\n    {\r\n        value: 'PLN',\r\n        label: 'PLN - polish zloty'\r\n    },\r\n    {\r\n        value: 'EUR',\r\n        label: 'EUR - Euro'\r\n    },\r\n    {\r\n        value: 'USD',\r\n        label: 'USD - United States dollar'\r\n    },\r\n    {\r\n        value: 'GBP',\r\n        label: 'GBP - Pound sterling'\r\n    },\r\n    {\r\n        value: 'JPY',\r\n        label: 'JPY - Japanese yen'\r\n    },\r\n    {\r\n        value: 'AUD',\r\n        label: 'AUD - Australian dollar'\r\n    },\r\n    {\r\n        value: 'CAD',\r\n        label: 'CAD -  Canadian dollar'\r\n    },\r\n    {\r\n        value: 'CHF',\r\n        label: 'CHF - Swiss franc'\r\n    },\r\n    {\r\n        value: 'SEK',\r\n        label: 'SEK - Swedish krona'\r\n    },\r\n    {\r\n        value: 'NZD',\r\n        label: 'NZD - New Zealand dollar'\r\n    },\r\n    {\r\n        value: 'RUB',\r\n        label: 'RUB - Russian ruble'\r\n    },\r\n];\r\n\r\nexport function getCurrencies() {\r\n    return currencies;\r\n}\r\n","import React from 'react';\r\nimport Joi from 'joi-browser';\r\nimport Paper from '@material-ui/core/Paper/Paper';\r\nimport Form from '../common/forms/Form';\r\nimport auth from '../../services/authService';\r\nimport { register } from '../../services/entities-services/userService';\r\nimport { translateErrorMessage } from '../../services/errorMessageService';\r\nimport {USERNAME, EMAIL, PASSWORD, CURRENCY} from '../../config/fieldNames';\r\nimport { getCurrencies } from '../../services/entities-services/currencyService';\r\nimport { alertService } from '../../services/alertService';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\nclass RegisterForm extends Form {\r\n    state = {\r\n        data: {\r\n            [USERNAME]: '',\r\n            [EMAIL]: '',\r\n            [PASSWORD]: '',\r\n            [CURRENCY]: ''\r\n        },\r\n        errors: {}\r\n    };\r\n\r\n    schema = {\r\n        [USERNAME]: Joi.string()\r\n            .required()\r\n            .min(3)\r\n            .max(30)\r\n            .regex(/^[a-zA-Z0-9]+([_-]?[a-zA-Z0-9])*$/, 'alphanumeric characters with exception of \\'-\\' and \\'_\\'')\r\n            .label('Username'),\r\n        [EMAIL]: Joi.string()\r\n            .required()\r\n            .email({ minDomainAtoms: 2 })\r\n            .label('Email address'),\r\n        [PASSWORD]: Joi.string()\r\n            .required()\r\n            .min(6)\r\n            .max(30)\r\n            .regex(/(?=.*?[A-Z])/, 'at least one upper case letter')\r\n            // .regex(/(?=.*?[#?!@$%^&*-])/, 'at least one special character')\r\n            .label('Password'),\r\n        [CURRENCY]: Joi.string()\r\n            .required()\r\n            .alphanum()\r\n            .min(3)\r\n            .max(3)\r\n            .regex(/^[A-Z]+$/, 'alpha')\r\n            .label('Basic currency')\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const response = await register(this.state.data);\r\n\r\n            auth.loginWithJwt(response.data);\r\n            window.location = '/';\r\n            alertService.success('You have successfully registered and logged in.');\r\n        } catch (e) {\r\n            if (e.response && [400, 401].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        if (auth.getCurrentUser()) return <Redirect to='/' />;\r\n\r\n        const options = getCurrencies();\r\n        return (\r\n            <Paper className='form-container'>\r\n\r\n                <form autoComplete='on' onKeyDown={this.onEnterDown}>\r\n                    <header className='form-header'>\r\n                        Register\r\n                    </header>\r\n\r\n                    <div className='form-content register-form'>\r\n                        {this.renderTextInput([USERNAME], 'Username', {}, {className: 'username-input', focus: true})}\r\n                        {this.renderTextInput([EMAIL], 'Email address', {}, {className: 'email-input'})}\r\n                        {this.renderPasswordInput([PASSWORD], 'Password', {}, {className: 'password-input'})}\r\n                        {this.renderSelectInput([CURRENCY], 'Basic currency', {options}, {className: 'currency-input'})}\r\n                    </div>\r\n\r\n                    <footer>\r\n                        {this.renderSubmitButton('Register')}\r\n                    </footer>\r\n                </form>\r\n\r\n            </Paper>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import http from '../httpService';\r\nimport { DateTime } from 'luxon';\r\nimport _ from 'lodash';\r\nimport { CATEGORY, DATE, DESCRIPTION, ID_CATEGORY, ID_ENTRY, SUB_ENTRIES, VALUE } from '../../config/fieldNames';\r\n\r\nconst apiEndpoint = '/entries';\r\n\r\nfunction entryUrl(entryId) {\r\n    return `${apiEndpoint}/${entryId}`;\r\n}\r\n\r\nfunction parseEntry(entry, type) {\r\n    const factor = type === 'income' ? 100 : -100;\r\n    return ({\r\n        value: (entry[VALUE] * factor).toFixed(0),\r\n        description: entry[DESCRIPTION].trim(),\r\n        date: DateTime.fromISO(entry[DATE]).valueOf(),\r\n        idCategory: _.get(entry, [CATEGORY, ID_CATEGORY]),\r\n        subEntries: Object.values(entry[SUB_ENTRIES]).map(subEntry => ({\r\n            value: (subEntry[VALUE] * factor).toFixed(0),\r\n            description: subEntry[DESCRIPTION].trim(),\r\n            idCategory: _.get(subEntry, [CATEGORY, ID_CATEGORY]),\r\n        })),\r\n    });\r\n}\r\n\r\nexport function getRecentEntries() {\r\n    return http.get(`${apiEndpoint}/recent`);\r\n}\r\n\r\nexport function getEntriesBetween(from, to) {\r\n    return http.get(`${apiEndpoint}/${from.toISODate()}/${to.toISODate()}`);\r\n}\r\n\r\nexport function addEntry(entry, type) {\r\n    return http.post(apiEndpoint, parseEntry(entry, type));\r\n}\r\n\r\nexport function updateEntry(idEntry, entry, type) {\r\n    return http.put(entryUrl(idEntry), parseEntry(entry, type));\r\n}\r\n\r\nexport function deleteEntry(entry) {\r\n    return http.delete(entryUrl(entry[ID_ENTRY]));\r\n}\r\n\r\n\r\n\r\n// DATA OPERATIONS:\r\n\r\nexport function processEntry(entry) {\r\n    entry.date = DateTime.fromMillis(entry.date);\r\n    if (!entry.idCategory) entry.idCategory = 0;\r\n    return entry;\r\n}\r\n\r\nexport function processEntries(entries) {\r\n    entries.forEach(entry => {\r\n        entry.date = DateTime.fromMillis(entry.date);\r\n    });\r\n    return entries;\r\n}\r\n\r\nexport function processEntryDate(entry) {\r\n    entry.date = DateTime.fromMillis(entry.date);\r\n    return entry;\r\n}\r\n\r\nexport function processEntriesDate(entries) {\r\n    entries.forEach(entry => processEntryDate(entry));\r\n    return entries;\r\n}\r\n\r\n\r\nexport function sort(items, fieldName, order) {\r\n    const orderFactor = order === 'desc' ? -1 : 1;\r\n    return items.sort(({ [fieldName]: a }, { [fieldName]: b }) => {\r\n        if (a < b) return -1 * orderFactor;\r\n        if (a > b) return orderFactor;\r\n        else return 0;\r\n    });\r\n}\r\n\r\n// return array of object {day: '2018-10-22', entries: [Object]}\r\nexport function splitByDays(entries) {\r\n    if (!entries) return [];\r\n\r\n    const dayEntriesMap = new Map();\r\n    entries.forEach(entry => {\r\n        const day = entry.date.toISODate();\r\n        const entriesByDay = dayEntriesMap.get(day) || [];\r\n        entriesByDay.push(entry);\r\n        dayEntriesMap.set(day, entriesByDay);\r\n    });\r\n\r\n    // // from map to array:\r\n    const dataStructure = [];\r\n    dayEntriesMap.forEach((value, key) => {\r\n        dataStructure.push({\r\n            day: DateTime.fromISO(key),\r\n            entries: sort(value, 'date', 'desc'),\r\n        })\r\n    });\r\n\r\n    // sort by day:\r\n    return sort(dataStructure, 'day', 'desc');\r\n    // return dataStructure.sort(({ day: a }, { day: b }) => sortDesc(a, b));\r\n}\r\n\r\n\r\n// FILTER ENTRIES\r\n\r\nfunction isEntryAndSelectionSpecValid(entry, selectionSpec) {\r\n    return Boolean(entry && selectionSpec);\r\n}\r\nfunction isEntriesAndSelectionSpecValid(entries, selectionSpec) {\r\n    return Boolean(entries && selectionSpec);\r\n}\r\n\r\nfunction isEntryBetweenDates(entry, from, to) {\r\n    return (entry.date > from && entry.date < to);\r\n}\r\nfunction isEntryOfSelectedCategory(entry, selectedCategoriesIds) {\r\n    return selectedCategoriesIds.includes(entry.idCategory) ||\r\n        entry.subEntries.some(subEntry => selectedCategoriesIds.includes(subEntry.idCategory));\r\n}\r\n\r\n\r\nexport function filterEntryByDate(entry, selectionSpec) {\r\n    if (!isEntryAndSelectionSpecValid(entry, selectionSpec)) return null;\r\n\r\n    const { from, to } = selectionSpec;\r\n    if (isEntryBetweenDates(entry, from, to)) return entry;\r\n    return null;\r\n}\r\n\r\nexport function filterEntryByCategory(entry, selectionSpec) {\r\n    if (!isEntryAndSelectionSpecValid(entry, selectionSpec)) return null;\r\n    const { selectedCategoriesType, selectedCategoriesIds } = selectionSpec;\r\n\r\n    const entryType = entry.value > 0 ? 1 : -1;\r\n    if (entryType !== selectedCategoriesType) return null;\r\n\r\n    if (isEntryOfSelectedCategory(entry, selectedCategoriesIds)) return entry;\r\n    return null;\r\n}\r\n\r\nexport function filterEntriesByCategory(entries, selectionSpec) {\r\n    if (!isEntriesAndSelectionSpecValid(entries, selectionSpec)) return [];\r\n    return entries.filter(entry => filterEntryByCategory(entry, selectionSpec));\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport DialogContentText from '@material-ui/core/es/DialogContentText/DialogContentText';\r\nimport withMobileDialog from '@material-ui/core/es/withMobileDialog/withMobileDialog';\r\nimport DialogContent from '@material-ui/core/es/DialogContent/DialogContent';\r\nimport DialogActions from '@material-ui/core/es/DialogActions/DialogActions';\r\nimport DialogTitle from '@material-ui/core/es/DialogTitle/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog/Dialog';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport { desktopDialogMaxWidth, mobileDialogBreakpoint } from '../../../config/theme';\r\n\r\n\r\nconst ConfirmationDialog = ({ header, content, onOk, open, onClose, fullScreen }) => {\r\n    return (\r\n        <Dialog\r\n            fullScreen={fullScreen}\r\n            scroll={'body'}\r\n            maxWidth={desktopDialogMaxWidth}\r\n            fullWidth={true}\r\n\r\n            open={open}\r\n            onClose={onClose}\r\n            disableBackdropClick={true}\r\n            disableEscapeKeyDown={true}\r\n            aria-labelledby='confirmation-dialog'\r\n        >\r\n\r\n            <DialogTitle\r\n                id='confirmation-dialog'\r\n                className='form-header'\r\n                disableTypography={true}\r\n            >\r\n                {header}\r\n            </DialogTitle>\r\n\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    {content}\r\n                </DialogContentText>\r\n            </DialogContent>\r\n\r\n            <DialogActions>\r\n                <Button onClick={onClose} color='primary'>\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={onOk} color='primary' autoFocus>\r\n                    Ok\r\n                </Button>\r\n            </DialogActions>\r\n\r\n        </Dialog>\r\n    );\r\n};\r\n\r\nConfirmationDialog.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    content: PropTypes.string.isRequired,\r\n    onOk: PropTypes.func.isRequired,\r\n\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n\r\n    fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: mobileDialogBreakpoint })(ConfirmationDialog);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { entryShape } from '../../config/propTypesCommon';\r\nimport { alertService } from '../../services/alertService';\r\nimport { translateErrorMessage } from '../../services/errorMessageService';\r\nimport { deleteEntry } from '../../services/entities-services/entryService';\r\nimport ConfirmationDialog from '../common/dialogs/ConfirmationDialog';\r\n\r\n\r\nclass EntryDeleteForm extends PureComponent {\r\n    state = {\r\n        header: 'Delete entry',\r\n        content: 'Are you sure you want to delete this entry?',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { entry } = this.props;\r\n        if (entry) {\r\n            const content = `Are you sure you want to delete entry '${entry.description}'?`;\r\n            this.setState({ content });\r\n        }\r\n    }\r\n\r\n    handleOk = async () => {\r\n        try {\r\n            const { entry } = this.props;\r\n            await deleteEntry(entry);\r\n            alertService.success('Entry successfully deleted.');\r\n            this.props.onClose();\r\n            this.props.onEntriesChange(entry, 'delete');\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { header, content } = this.state;\r\n        const { open, onClose } = this.props;\r\n\r\n        return (\r\n            <ConfirmationDialog\r\n                header={header}\r\n                content={content}\r\n                onOk={this.handleOk}\r\n\r\n                open={open}\r\n                onClose={onClose}\r\n            >\r\n            </ConfirmationDialog>\r\n        );\r\n    }\r\n}\r\n\r\nEntryDeleteForm.propTypes = {\r\n    entry: entryShape.isRequired,\r\n\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onEntriesChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EntryDeleteForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Joi from 'joi-browser';\r\nimport { DateTime } from 'luxon';\r\nimport _ from 'lodash';\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport Button from '@material-ui/core/Button/Button';\r\nimport { addEntry, updateEntry } from '../../services/entities-services/entryService';\r\nimport Form from '../common/forms/Form';\r\nimport { CATEGORY, DATE, DESCRIPTION, SUB_ENTRIES, VALUE } from '../../config/fieldNames';\r\nimport { translateErrorMessage } from '../../services/errorMessageService';\r\nimport { alertService } from '../../services/alertService';\r\nimport { categoryShape, entryShape } from '../../config/propTypesCommon';\r\nimport { getCategoriesByType, getCategoryByIdCategory } from '../../services/entities-services/categoryService';\r\nimport withMobileDialog from '@material-ui/core/es/withMobileDialog/withMobileDialog';\r\nimport Dialog from '@material-ui/core/Dialog/Dialog';\r\nimport DialogActions from '@material-ui/core/es/DialogActions/DialogActions';\r\nimport DialogContent from '@material-ui/core/es/DialogContent/DialogContent';\r\nimport DialogTitle from '@material-ui/core/es/DialogTitle/DialogTitle';\r\nimport { desktopDialogMaxWidth, mobileDialogBreakpoint } from '../../config/theme';\r\n\r\n\r\nclass EntryForm extends Form {\r\n    state = {\r\n        data: {\r\n            [VALUE]: '',\r\n            [DESCRIPTION]: '',\r\n            [DATE]: '',\r\n            [CATEGORY]: {},\r\n            [SUB_ENTRIES]: {},\r\n        },\r\n        errors: {},\r\n    };\r\n\r\n    schema = {\r\n        [VALUE]: Joi.number()\r\n            .required()\r\n            .positive()\r\n            .max(1000000)\r\n            .precision(2)\r\n            .label('Value'),\r\n        [DESCRIPTION]: Joi.string()\r\n            .required()\r\n            .label('Description'),\r\n        [DATE]: Joi.string()\r\n            .required()\r\n            .label('Date'),\r\n        [CATEGORY]: Joi.object()\r\n            .label('Category'),\r\n    };\r\n\r\n    validationIgnoreList = [CATEGORY];\r\n\r\n    componentDidMount() {\r\n        const data = { ...this.state.data };\r\n        const { entry } = this.props;\r\n\r\n        if (entry) {\r\n            data[VALUE] = (Math.abs(entry.value / 100)).toString();\r\n            data[DESCRIPTION] = entry.description;\r\n            data[DATE] = entry.date.toISO();\r\n            data[CATEGORY] = getCategoryByIdCategory(entry.idCategory) || {};\r\n            data[SUB_ENTRIES] = entry.subEntries.map(subEntry => ({\r\n                [VALUE]: (Math.abs(subEntry.value / 100)).toString(),\r\n                [DESCRIPTION]: subEntry.description,\r\n                [CATEGORY]: getCategoryByIdCategory(subEntry.idCategory) || {},\r\n            }));\r\n        } else {\r\n            data[DATE] = DateTime.local().toISO();\r\n        }\r\n        this.setState({ data });\r\n    }\r\n\r\n    extendedOnInputChange = (path, data) => {\r\n        if (_.last(path) === VALUE) {\r\n            const { [VALUE]: value, [SUB_ENTRIES]: subEntries } = data;\r\n            const subEntriesValues = Object.values(subEntries).map(subEntry => subEntry[VALUE]);\r\n            const sumOfSubEntriesValues = subEntriesValues.reduce((a, b) => Number(a) + Number(b), 0);\r\n\r\n            if (Number(value) < sumOfSubEntriesValues)\r\n                data[VALUE] = sumOfSubEntriesValues.toString();\r\n        }\r\n        if (_.isEqual(path, [CATEGORY])) {\r\n            const newMainCategory = data[CATEGORY];\r\n            const { [SUB_ENTRIES]: subEntries } = data;\r\n            if (newMainCategory) {\r\n                Object.values(subEntries)\r\n                    .filter(se => !_.isEmpty(se[CATEGORY]))\r\n                    .filter(se => !(se[CATEGORY].path && se[CATEGORY].path.includes(newMainCategory.idCategory)))\r\n                    .forEach(se => se[CATEGORY] = {});\r\n\r\n                // Object.values(subEntries)\r\n                //     .filter(se => _.isEmpty(se[CATEGORY]))\r\n                //     .forEach(se => se[CATEGORY] = newMainCategory)\r\n            }\r\n        }\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        const { data } = this.state;\r\n        const { entry, type, onClose, onEntriesChange } = this.props;\r\n        try {\r\n            if (entry) {\r\n                const { data: response } = await updateEntry(entry.idEntry, data, type);\r\n                alertService.success('Entry successfully updated.');\r\n                onClose();\r\n                onEntriesChange(response, 'edit');\r\n            } else {\r\n                const { data: response } = await addEntry(data, type);\r\n                alertService.success('Entry successfully added.');\r\n                onClose();\r\n                onEntriesChange(response, 'add');\r\n            }\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    handleAddSubEntry = () => {\r\n        const data = { ...this.state.data };\r\n        data[SUB_ENTRIES][new Date().valueOf()] = {\r\n            [VALUE]: '',\r\n            [DESCRIPTION]: '',\r\n            [CATEGORY]: data[CATEGORY],\r\n        };\r\n        this.setState({ data });\r\n    };\r\n\r\n    handleRemoveSubEntry = id => () => {\r\n        const data = { ...this.state.data };\r\n        const newEntryValue = data[VALUE] ? data[VALUE] - Number(data[SUB_ENTRIES][id][VALUE]) : data[VALUE];\r\n        data[VALUE] = newEntryValue.toString();\r\n        delete data[SUB_ENTRIES][id];\r\n        this.setState({ data });\r\n    };\r\n\r\n    renderNewSubEntryButton = () => {\r\n        return (\r\n            <Button size='small' className='new-subEntry-btn' onClick={this.handleAddSubEntry}>\r\n                <Add /> Add sub entry\r\n            </Button>\r\n        );\r\n    };\r\n\r\n    renderSubEntriesArea = () => {\r\n        const { currency, type, rootCategory } = this.props;\r\n        const { [SUB_ENTRIES]: subEntries, [CATEGORY]: category } = this.state.data;\r\n\r\n        if (subEntries) {\r\n            return (\r\n                <div className='subEntry-area'>\r\n                    {\r\n                        Object.keys(subEntries).map(id => {\r\n                            const path = [SUB_ENTRIES, id];\r\n                            const categoryDetails = {\r\n                                rootCategory: _.isEmpty(category) ? getCategoriesByType(rootCategory, type) : category,\r\n                                onlySubCategories: _.isEmpty(category),\r\n                                header: null,\r\n                            };\r\n                            return (\r\n                                <div key={id} className='subEntry-row'>\r\n                                    {this.renderCurrencyInput([...path, VALUE], 'Value', {currency},\r\n                                        {className: 'currency-input', margin: 'dense'})}\r\n                                    {this.renderTextInput([...path, DESCRIPTION], 'Description', {},\r\n                                        {className: 'description-input', margin: 'dense'})}\r\n                                    {this.renderCategoryInput([...path, CATEGORY], 'Sub category', categoryDetails,\r\n                                        {className: 'category-input', margin: 'dense'})}\r\n                                    {this.renderIconButton(\r\n                                        <Delete />, this.handleRemoveSubEntry(id), 'Remove sub entry', 'remove-subEntry-btn'\r\n                                    )}\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { entry, currency, type, rootCategory, open, onClose, fullScreen } = this.props;\r\n        const headerClassName = type === 'income' ? 'positive' : 'negative';\r\n        const formTitle = entry ? 'Edit ' : 'Add new';\r\n        const submitButtonTitle = entry ? 'Save' : 'Add';\r\n\r\n        const categoryDetails = {\r\n            rootCategory: getCategoriesByType(rootCategory, type),\r\n            onlySubCategories: true,\r\n            header: null,\r\n        };\r\n\r\n        return (\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                scroll={'body'}\r\n                maxWidth={desktopDialogMaxWidth}\r\n                fullWidth={true}\r\n\r\n                open={open}\r\n                onClose={onClose}\r\n                disableBackdropClick={true}\r\n                aria-labelledby='entry-form-dialog'\r\n            >\r\n\r\n                <DialogTitle\r\n                    id='entry-form-dialog'\r\n                    className='form-header'\r\n                    disableTypography={true}\r\n                >\r\n                    {formTitle} <span className={headerClassName}>{type}</span>\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form autoComplete='on' onKeyDown={this.onEnterDown}>\r\n\r\n                        <div className='form-content new-entry-form'>\r\n                            {this.renderCurrencyInput([VALUE], 'Value', {currency}, {className: 'currency-input', focus: true})}\r\n                            {this.renderCategoryInput([CATEGORY], 'Category', categoryDetails, {className: 'category-input'})}\r\n                            {this.renderTextInput([DESCRIPTION], 'Description', {}, {className: 'description-input'})}\r\n                            {this.renderDateTimeInput([DATE], 'Date', {}, {className: 'date-input'})}\r\n\r\n                            {this.renderSubEntriesArea()}\r\n                            {this.renderNewSubEntryButton()}\r\n                        </div>\r\n\r\n                    </form>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    {this.renderCancelButton(onClose)}\r\n                    {this.renderSubmitButton(submitButtonTitle)}\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nEntryForm.propTypes = {\r\n    type: PropTypes.oneOf(['expense', 'income']).isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n    rootCategory: categoryShape.isRequired,\r\n    entry: entryShape,\r\n\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onEntriesChange: PropTypes.func.isRequired,\r\n\r\n    fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: mobileDialogBreakpoint })(EntryForm);\r\n","import React, { PureComponent } from 'react';\r\nimport { Delete, Edit, ExpandMore } from '@material-ui/icons';\r\nimport ExpansionPanel from '@material-ui/core/es/ExpansionPanel/ExpansionPanel';\r\nimport ExpansionPanelSummary from '@material-ui/core/es/ExpansionPanelSummary/ExpansionPanelSummary';\r\nimport ExpansionPanelDetails from '@material-ui/core/es/ExpansionPanelDetails/ExpansionPanelDetails';\r\nimport { categoryShape, entryShape } from '../../config/propTypesCommon';\r\nimport { DateTime } from 'luxon';\r\nimport { getCategoryByIdCategory } from '../../services/entities-services/categoryService';\r\nimport PropTypes from 'prop-types';\r\nimport ExpansionPanelActions from '@material-ui/core/es/ExpansionPanelActions/ExpansionPanelActions';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport ListItemIcon from '@material-ui/core/es/ListItemIcon/ListItemIcon';\r\nimport EntryDeleteForm from '../forms/EntryDeleteForm';\r\nimport EntryForm from '../forms/EntryForm';\r\n\r\n\r\nclass EntryListItem extends PureComponent {\r\n    state = {\r\n        open: false,\r\n        operationType: null,\r\n    };\r\n\r\n    formatValue = (value, currency) => {\r\n        const valueType = value > 0 ? 'positive' : '';\r\n        return (\r\n            <div className='value'>\r\n                <span className={valueType}>{(value / 100).toFixed(2)}</span>\r\n                <span className='currency'>{currency}</span>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    renderSubEntry = (subEntry, currency) => {\r\n        const { idSubEntry, value, description, idCategory } = subEntry;\r\n        const category = getCategoryByIdCategory(idCategory);\r\n\r\n        return (\r\n            <React.Fragment key={idSubEntry}>\r\n                {this.formatValue(value, currency)}\r\n                <div className='category'>{category && category.name}</div>\r\n                <div className='description'>{description}</div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    renderEntrySummary = (entry, currency) => {\r\n        const { fullDate } = this.props;\r\n        const { date, idCategory, description, value } = entry;\r\n        const time = date.toLocaleString(fullDate ? DateTime.DATETIME_MED :DateTime.TIME_SIMPLE);\r\n        const category = getCategoryByIdCategory(idCategory);\r\n\r\n        return (\r\n            <ExpansionPanelSummary expandIcon={<ExpandMore />}>\r\n\r\n                <div className='entry-row-summary'>\r\n                    <div className='time'>{time}</div>\r\n                    {category && <div className='category'>{category.name}</div>}\r\n                    <div className='description'>{description}</div>\r\n                    {this.formatValue(value, currency)}\r\n                </div>\r\n\r\n            </ExpansionPanelSummary>\r\n        );\r\n    };\r\n\r\n    renderEntryDetails = (entry, currency) => {\r\n        const { subEntries, dateOfAddition, dateOfLastModification } = entry;\r\n        const additionDate = DateTime.fromMillis(dateOfAddition).toLocaleString(DateTime.DATETIME_MED);\r\n        const modificationDate = (dateOfAddition !== dateOfLastModification) ?\r\n            DateTime.fromMillis(dateOfLastModification).toLocaleString(DateTime.DATETIME_MED) : null;\r\n\r\n        return (\r\n            <ExpansionPanelDetails>\r\n\r\n                <div className='entry-row-details'>\r\n                    <div className='addition-date'>Added: {additionDate}</div>\r\n                    {modificationDate && <div className='last-modification-date'>Modified: {modificationDate}</div>}\r\n                    {\r\n                        subEntries.length > 0 && (\r\n                            <div className='sub-entries-area'>\r\n                                {subEntries.map(subEntry => this.renderSubEntry(subEntry, currency))}\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n            </ExpansionPanelDetails>\r\n        );\r\n    };\r\n\r\n    renderEntryOptions = () => {\r\n        return (\r\n            <ExpansionPanelActions>\r\n                <Button size='small' onClick={() => this.setState({ operationType: 'delete' })}>\r\n                    <ListItemIcon className='m-0'>\r\n                        <Delete />\r\n                    </ListItemIcon>\r\n                    Delete\r\n                </Button>\r\n                <Button size='small' onClick={() => this.setState({ operationType: 'edit' })}>\r\n                    <ListItemIcon className='m-0'>\r\n                        <Edit />\r\n                    </ListItemIcon>\r\n                    Edit\r\n                </Button>\r\n            </ExpansionPanelActions>\r\n        );\r\n    };\r\n\r\n\r\n    handleEntryFormClose = () => {\r\n        this.setState({ operationType: null });\r\n    };\r\n\r\n    renderDeleteEntryDialog = operationType => {\r\n        if (operationType !== 'delete') return null;\r\n        const { entry, onEntriesChange } = this.props;\r\n        return (\r\n            <EntryDeleteForm\r\n                entry={entry}\r\n                open={Boolean(entry)}\r\n                onClose={this.handleEntryFormClose}\r\n                onEntriesChange={onEntriesChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderEditEntryDialog = operationType => {\r\n        if (operationType !== 'edit') return null;\r\n        const { entry, rootCategory, currency, onEntriesChange } = this.props;\r\n        const type = entry.value > 0 ? 'income' : 'expense';\r\n        return (\r\n            <EntryForm\r\n                type={type}\r\n                currency={currency}\r\n                rootCategory={rootCategory}\r\n                entry={entry}\r\n                open={Boolean(entry)}\r\n                onClose={this.handleEntryFormClose}\r\n                onEntriesChange={onEntriesChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { open, operationType } = this.state;\r\n        const { entry, currency } = this.props;\r\n\r\n        return (\r\n            <ExpansionPanel\r\n                expanded={open}\r\n                onChange={() => this.setState(state => ({ open: !state.open }))}\r\n            >\r\n\r\n                {this.renderEntrySummary(entry, currency)}\r\n                {open && this.renderEntryDetails(entry, currency)}\r\n                {open && this.renderEntryOptions()}\r\n\r\n                {open && this.renderDeleteEntryDialog(operationType)}\r\n                {open && this.renderEditEntryDialog(operationType)}\r\n\r\n            </ExpansionPanel>\r\n        );\r\n    }\r\n}\r\n\r\nEntryListItem.propTypes = {\r\n    entry: entryShape.isRequired,\r\n    fullDate: PropTypes.bool,\r\n    rootCategory: categoryShape,\r\n    currency: PropTypes.string.isRequired,\r\n    onEntriesChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EntryListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport EntryListItem from './EntryListItem';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { categoryShape, entryShape } from '../../config/propTypesCommon';\r\n\r\n\r\nconst EntryList = ({ entriesByDay, rootCategory, currency, onEntriesChange }) => {\r\n\r\n    if (!entriesByDay || entriesByDay.length === 0 || !rootCategory || !currency)\r\n        return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n    return (\r\n        <div className='entry-list'>\r\n            {\r\n                entriesByDay.map(({day, entries}) => (\r\n                    <Typography component={'div'} key={day}>\r\n\r\n                        <div className='entries-for-day header'>\r\n                            {day.toFormat('dd MMMM yyyy, cccc')}\r\n                        </div>\r\n\r\n                        {\r\n                            entries.map(entry => (\r\n                                <EntryListItem\r\n                                    key={entry.idEntry}\r\n                                    entry={entry}\r\n                                    rootCategory={rootCategory}\r\n                                    currency={currency}\r\n                                    onEntriesChange={onEntriesChange}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Typography>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nEntryList.propTypes = {\r\n    entriesByDay: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            day: PropTypes.object.isRequired,\r\n            entries: PropTypes.arrayOf(entryShape),\r\n        }).isRequired,\r\n    ),\r\n    rootCategory: categoryShape,\r\n    currency: PropTypes.string,\r\n    onEntriesChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EntryList;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport EntryListItem from './EntryListItem';\r\nimport { sort } from '../../services/entities-services/entryService';\r\nimport { categoryShape, entryShape } from '../../config/propTypesCommon';\r\n\r\n\r\nclass EntryListRecent extends PureComponent {\r\n\r\n    componentDidMount() {\r\n        this.props.getRecentEntries();\r\n    }\r\n\r\n    render() {\r\n        const { recentEntries, rootCategory, currency, onEntriesChange } = this.props;\r\n\r\n        if (!recentEntries || recentEntries.length === 0 || !rootCategory || !currency)\r\n            return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n\r\n        const sortedRecentEntries = sort(recentEntries, 'dateOfLastModification', 'desc');\r\n        return (\r\n            <div className='entry-list recent'>\r\n                {\r\n                    <Typography component={'div'}>\r\n\r\n                        <div className='entries-for-day header'>\r\n                            Recent entries\r\n                        </div>\r\n\r\n                        {\r\n                            sortedRecentEntries.map(entry => (\r\n                                <EntryListItem\r\n                                    key={entry.idEntry}\r\n                                    entry={entry}\r\n                                    fullDate={true}\r\n                                    rootCategory={rootCategory}\r\n                                    currency={currency}\r\n                                    onEntriesChange={onEntriesChange}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </Typography>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nEntryListRecent.propTypes = {\r\n    recentEntries: PropTypes.arrayOf(entryShape),\r\n    rootCategory: categoryShape,\r\n    currency: PropTypes.string,\r\n    getRecentEntries: PropTypes.func.isRequired,\r\n    onEntriesChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EntryListRecent;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuItem from '@material-ui/core/es/MenuItem/MenuItem';\r\nimport ListItemIcon from '@material-ui/core/es/ListItemIcon/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/es/ListItemText/ListItemText';\r\n\r\n\r\nconst MenuOption = ({ icon, label, excluded = false, ...rest }) => {\r\n    if (excluded) return null;\r\n    return (\r\n        <MenuItem {...rest} >\r\n\r\n            <ListItemIcon className='m-0'>\r\n                {icon}\r\n            </ListItemIcon>\r\n\r\n            <ListItemText primary={label} />\r\n\r\n        </MenuItem>\r\n    );\r\n};\r\n\r\nMenuOption.propTypes = {\r\n    icon: PropTypes.element.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    excluded: PropTypes.bool,\r\n    onClick: PropTypes.func,\r\n    component: PropTypes.func,\r\n    to: PropTypes.string,\r\n};\r\n\r\nexport default MenuOption;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport MenuOption from './MenuOption';\r\nimport Popper from '@material-ui/core/es/Popper/Popper';\r\nimport Grow from '@material-ui/core/es/Grow/Grow';\r\nimport Paper from '@material-ui/core/es/Paper/Paper';\r\nimport ClickAwayListener from '@material-ui/core/es/ClickAwayListener/ClickAwayListener';\r\nimport MenuList from '@material-ui/core/es/MenuList/MenuList';\r\n\r\n\r\nconst DropDownMenu = ({ anchorEl, menuOptions, onClose }) => {\r\n    return (\r\n        <Popper\r\n            open={Boolean(anchorEl)}\r\n            anchorEl={anchorEl}\r\n            transition\r\n            disablePortal\r\n            placement='bottom-end'\r\n        >\r\n\r\n            {({ TransitionProps }) => (\r\n                <Grow\r\n                    {...TransitionProps}\r\n                >\r\n                    <Paper>\r\n                        <ClickAwayListener onClickAway={onClose}>\r\n                            <MenuList>\r\n\r\n                                {\r\n                                    menuOptions.map(({ ...options }, index) => (\r\n                                        <MenuOption key={index} {...options} />\r\n                                    ))\r\n                                }\r\n\r\n                            </MenuList>\r\n                        </ClickAwayListener>\r\n                    </Paper>\r\n                </Grow>\r\n            )}\r\n\r\n        </Popper>\r\n    );\r\n};\r\n\r\nDropDownMenu.propTypes = {\r\n    anchorEl: PropTypes.object,\r\n    menuOptions: PropTypes.arrayOf(PropTypes.shape({\r\n        label: PropTypes.string.isRequired,\r\n        icon: PropTypes.element.isRequired,\r\n        excluded: PropTypes.bool,\r\n        onClick: PropTypes.func,\r\n        component: PropTypes.func,\r\n        to: PropTypes.string,\r\n    })).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DropDownMenu;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport Tooltip from '@material-ui/core/es/Tooltip/Tooltip';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport DropDownMenu from './DropDownMenu';\r\n\r\n\r\nclass ButtonWithMenu extends PureComponent {\r\n    state = {\r\n        anchorEl: null,\r\n    };\r\n\r\n    handleToggle = event => {\r\n        this.setState({ anchorEl: event.currentTarget });\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl } = this.state;\r\n        const { buttonLabel, buttonTooltip, menuOptions } = this.props;\r\n        const open = Boolean(anchorEl);\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <Tooltip title={buttonTooltip} enterDelay={500} leaveDelay={200}>\r\n                    <Button\r\n                        aria-owns={open ? 'menu-list-grow' : undefined}\r\n                        aria-haspopup='true'\r\n                        onClick={this.handleToggle}\r\n                        color='inherit'\r\n                        style={{ textTransform: 'none' }}\r\n                    >\r\n                        {buttonLabel} {open ? <ExpandLess /> : <ExpandMore />}\r\n                    </Button>\r\n                </Tooltip>\r\n\r\n                <DropDownMenu\r\n                    anchorEl={anchorEl}\r\n                    menuOptions={menuOptions}\r\n                    onClose={this.handleClose}\r\n                />\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nButtonWithMenu.propTypes = {\r\n    buttonLabel: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.element,\r\n    ]).isRequired,\r\n\r\n    buttonTooltip: PropTypes.string,\r\n\r\n    menuOptions: PropTypes.arrayOf(PropTypes.shape({\r\n        label: PropTypes.string.isRequired,\r\n        icon: PropTypes.element.isRequired,\r\n        excluded: PropTypes.bool,\r\n        onClick: PropTypes.func,\r\n        component: PropTypes.func,\r\n        to: PropTypes.string,\r\n    })).isRequired,\r\n};\r\n\r\nexport default ButtonWithMenu;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withMobileDialog from '@material-ui/core/es/withMobileDialog/withMobileDialog';\r\nimport DialogContentText from '@material-ui/core/es/DialogContentText/DialogContentText';\r\nimport DialogActions from '@material-ui/core/es/DialogActions/DialogActions';\r\nimport DialogContent from '@material-ui/core/es/DialogContent/DialogContent';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport Dialog from '@material-ui/core/Dialog/Dialog';\r\nimport Tabs from '@material-ui/core/es/Tabs/Tabs';\r\nimport Tab from '@material-ui/core/es/Tab/Tab';\r\nimport { desktopDialogMaxWidth, mobileDialogBreakpoint } from '../../config/theme';\r\n\r\n\r\nclass UserOptionDialog extends PureComponent {\r\n    state = {\r\n        openTabId: 0,\r\n    };\r\n\r\n    handleTabChange = (event, openTabId) => {\r\n        this.setState({ openTabId });\r\n    };\r\n\r\n    render() {\r\n        const { openTabId } = this.state;\r\n        const { open, onClose, fullScreen } = this.props;\r\n\r\n        return (\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                scroll={'body'}\r\n                maxWidth={desktopDialogMaxWidth}\r\n                fullWidth={true}\r\n\r\n                open={open}\r\n                onClose={onClose}\r\n                disableBackdropClick={true}\r\n                onEscapeKeyDown={onClose}\r\n                aria-labelledby='user-tab-dialog'\r\n            >\r\n\r\n                <Tabs\r\n                    value={openTabId}\r\n                    onChange={this.handleTabChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    centered\r\n                    fullWidth\r\n                >\r\n\r\n                    <Tab label='One' />\r\n                    <Tab label='Two' />\r\n\r\n                </Tabs>\r\n\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        {\r\n                            openTabId === 0 && (\r\n                                'Work in progress...'\r\n                            )\r\n                        }\r\n\r\n                        {\r\n                            openTabId === 1 && (\r\n                                'Work in progress......'\r\n                            )\r\n                        }\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color='primary'>\r\n                        Exit\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nUserOptionDialog.propTypes = {\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: mobileDialogBreakpoint })(UserOptionDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Joi from 'joi-browser';\r\nimport _ from 'lodash';\r\nimport DialogTitle from '@material-ui/core/es/DialogTitle/DialogTitle';\r\nimport DialogContent from '@material-ui/core/es/DialogContent/DialogContent';\r\nimport DialogActions from '@material-ui/core/es/DialogActions/DialogActions';\r\nimport withMobileDialog from '@material-ui/core/es/withMobileDialog/withMobileDialog';\r\nimport Dialog from '@material-ui/core/Dialog/Dialog';\r\nimport Form from '../common/forms/Form';\r\nimport { addCategory, getCategoriesByType, getCategoryParent, updateCategory, } from '../../services/entities-services/categoryService';\r\nimport { translateErrorMessage } from '../../services/errorMessageService';\r\nimport { alertService } from '../../services/alertService';\r\nimport { desktopDialogMaxWidth, mobileDialogBreakpoint } from '../../config/theme';\r\nimport { CATEGORY, ID_CATEGORY, NAME } from '../../config/fieldNames';\r\nimport { categoryShape } from '../../config/propTypesCommon';\r\n\r\n\r\nclass CategoryForm extends Form {\r\n    state = {\r\n        data: {\r\n            [CATEGORY]: {},\r\n            [NAME]: '',\r\n        },\r\n        errors: {},\r\n    };\r\n\r\n    schema = {\r\n        [CATEGORY]: Joi.object()\r\n            .label('Parent category'),\r\n        [NAME]: Joi.string()\r\n            .required()\r\n            .label('Name'),\r\n    };\r\n\r\n    validationIgnoreList = [CATEGORY];\r\n\r\n    isCategoryDisabled = category => {\r\n        const { category: editedCategory } = this.props;\r\n\r\n        if (editedCategory) {\r\n            if (category.idCategory === editedCategory.idCategory)\r\n                return true;\r\n\r\n            if (category.path.includes(editedCategory.idCategory))\r\n                return true;\r\n        }\r\n    };\r\n\r\n    doSubmit = async () => {\r\n        try {\r\n            const { data } = this.state;\r\n            const { category } = this.props;\r\n\r\n            if (category) {\r\n                if (_.last(category.path) !== data[CATEGORY][ID_CATEGORY] || category[NAME] !== data[NAME]) {\r\n                    await updateCategory(category, data);\r\n                    alertService.success('Category successfully updated.');\r\n                    this.props.onRootCategoryChange();\r\n                }\r\n                this.props.onClose();\r\n\r\n            } else {\r\n                await addCategory(this.state.data);\r\n                alertService.success('Category successfully added.');\r\n                this.props.onClose();\r\n                this.props.onRootCategoryChange();\r\n            }\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { rootCategory, superCategory, category } = this.props;\r\n        const data = { ...this.state.data };\r\n\r\n        if (category) {\r\n            data[CATEGORY] = getCategoryParent(rootCategory, category.lodashPath);\r\n            data[NAME] = category[NAME];\r\n        } else if (superCategory) {\r\n            data[CATEGORY] = superCategory;\r\n        }\r\n\r\n        this.setState({ data });\r\n    }\r\n\r\n    render() {\r\n        const { type, rootCategory, category, open, onClose, fullScreen } = this.props;\r\n        const formTitle = category ? 'Edit category' : 'Add category';\r\n        const submitButtonTitle = category ? 'Save' : 'Add';\r\n\r\n        const categoryDetails = {\r\n            rootCategory: getCategoriesByType(rootCategory, type),\r\n            onlySubCategories: false,\r\n            resetDisabled: true,\r\n            categoryDisabled: this.isCategoryDisabled,\r\n        };\r\n\r\n        return (\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                scroll={'body'}\r\n                maxWidth={desktopDialogMaxWidth}\r\n                fullWidth={true}\r\n\r\n                open={open}\r\n                onClose={onClose}\r\n                disableBackdropClick={true}\r\n                aria-labelledby='category-form-dialog'\r\n            >\r\n\r\n                <DialogTitle\r\n                    id='category-form-dialog'\r\n                    className='form-header'\r\n                    disableTypography={true}\r\n                >\r\n                    {formTitle}\r\n                </DialogTitle>\r\n\r\n                <DialogContent>\r\n                    <form autoComplete='on' onKeyDown={this.onEnterDown}>\r\n\r\n                        <div className='form-content category-form'>\r\n                            {this.renderCategoryInput([CATEGORY], 'Parent category', categoryDetails, { className: 'category-input' })}\r\n                            {this.renderTextInput([NAME], 'Name', {}, { focus: true, className: 'category-name-input' })}\r\n                        </div>\r\n\r\n                    </form>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    {this.renderCancelButton(onClose)}\r\n                    {this.renderSubmitButton(submitButtonTitle)}\r\n                </DialogActions>\r\n\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryForm.propTypes = {\r\n    type: PropTypes.oneOf(['expense', 'income']).isRequired,\r\n    rootCategory: categoryShape.isRequired,\r\n    superCategory: categoryShape,\r\n    category: categoryShape,\r\n\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onRootCategoryChange: PropTypes.func.isRequired,\r\n\r\n    fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: mobileDialogBreakpoint })(CategoryForm);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ConfirmationDialog from '../common/dialogs/ConfirmationDialog';\r\nimport { alertService } from '../../services/alertService';\r\nimport { translateErrorMessage } from '../../services/errorMessageService';\r\nimport { deleteCategory } from '../../services/entities-services/categoryService';\r\nimport { categoryShape } from '../../config/propTypesCommon';\r\n\r\n\r\nclass CategoryDeleteForm extends PureComponent {\r\n    state = {\r\n        header: 'Delete category',\r\n        content: 'Are you sure you want to delete this category?',\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { category } = this.props;\r\n        if (category) {\r\n            const content = `Are you sure you want to delete '${category.name}' category?`;\r\n            this.setState({ content });\r\n        }\r\n    }\r\n\r\n    handleOk = async () => {\r\n        try {\r\n            const { category } = this.props;\r\n            await deleteCategory(category);\r\n            alertService.success('Category successfully deleted.');\r\n            this.props.onClose();\r\n            this.props.onRootCategoryChange();\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const { header, content } = this.state;\r\n        const { open, onClose } = this.props;\r\n\r\n        return (\r\n            <ConfirmationDialog\r\n                header={header}\r\n                content={content}\r\n                onOk={this.handleOk}\r\n\r\n                open={open}\r\n                onClose={onClose}\r\n            >\r\n            </ConfirmationDialog>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryDeleteForm.propTypes = {\r\n    category: categoryShape.isRequired,\r\n\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onRootCategoryChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryDeleteForm;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Add, Delete, Edit } from '@material-ui/icons';\r\nimport DialogContent from '@material-ui/core/es/DialogContent/DialogContent';\r\nimport DialogActions from '@material-ui/core/es/DialogActions/DialogActions';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport CategoryList from '../common/lists/CategoryList';\r\nimport DropDownMenu from '../common/menus/DropDownMenu';\r\nimport CategoryForm from '../forms/CategoryForm';\r\nimport CategoryDeleteForm from '../forms/CategoryDeleteForm';\r\nimport { categoryShape } from '../../config/propTypesCommon';\r\nimport { getCategoriesByType, getCategoryParent } from '../../services/entities-services/categoryService';\r\n\r\n\r\nclass CategoryOptionTab extends PureComponent {\r\n    state = {\r\n        anchorEl: null,\r\n        operationType: null,\r\n        selectedCategory: null,\r\n    };\r\n\r\n    handleMenuOpen = (category, event) => {\r\n        this.setState({ anchorEl: event.currentTarget, selectedCategory: category });\r\n    };\r\n\r\n    handleMenuClose = () => {\r\n        this.setState({ anchorEl: null });\r\n    };\r\n\r\n    handleBasicCategoryAddFormOpen = () => {\r\n        const { selectedCategory } = this.state;\r\n        const { rootCategory } = this.props;\r\n        const parentOfSelected = getCategoryParent(rootCategory, selectedCategory.lodashPath);\r\n        this.setState({ operationType: 'add', selectedCategory: parentOfSelected });\r\n    };\r\n\r\n    handleCategoryFormOpen = operationType => {\r\n        this.setState({ operationType: operationType });\r\n    };\r\n\r\n    handleCategoryFormClose = () => {\r\n        this.setState({ operationType: null });\r\n    };\r\n\r\n    renderOptionMenu = (anchorEl, selectedCategory) => {\r\n        const selectedCategoryIsBasicCategory = selectedCategory && selectedCategory.path.length === 2;\r\n        return (\r\n            <DropDownMenu\r\n                anchorEl={anchorEl}\r\n                menuOptions={[\r\n                    {\r\n                        icon: <Add />,\r\n                        label: 'Add category',\r\n                        onClick: () => this.handleBasicCategoryAddFormOpen(),\r\n                        excluded: !selectedCategoryIsBasicCategory,\r\n                    },\r\n                    {\r\n                        icon: <Add />,\r\n                        label: 'Add sub category',\r\n                        onClick: () => this.handleCategoryFormOpen('add'),\r\n                    },\r\n                    {\r\n                        icon: <Edit />,\r\n                        label: 'Edit',\r\n                        onClick: () => this.handleCategoryFormOpen('edit'),\r\n                    },\r\n                    {\r\n                        icon: <Delete />,\r\n                        label: 'Delete',\r\n                        onClick: () => this.handleCategoryFormOpen('delete'),\r\n                    },\r\n                ]}\r\n                onClose={this.handleMenuClose}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderCategoryForm = (operationType, selectedCategory) => {\r\n        if (!['add', 'edit'].includes(operationType)) return null;\r\n        const { type, rootCategory, onRootCategoryChange } = this.props;\r\n        return (\r\n            <CategoryForm\r\n                type={type}\r\n                rootCategory={rootCategory}\r\n                superCategory={operationType === 'add' ? selectedCategory : null}\r\n                category={operationType === 'edit' ? selectedCategory : null}\r\n                open={Boolean(selectedCategory) && Boolean(operationType)}\r\n                onClose={this.handleCategoryFormClose}\r\n                onRootCategoryChange={onRootCategoryChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderDeleteCategoryDialog = (operationType, selectedCategory) => {\r\n        if (!['delete'].includes(operationType)) return null;\r\n        const { onRootCategoryChange } = this.props;\r\n        return (\r\n            <CategoryDeleteForm\r\n                category={selectedCategory}\r\n                open={Boolean(selectedCategory)}\r\n                onClose={this.handleCategoryFormClose}\r\n                onRootCategoryChange={onRootCategoryChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { anchorEl, selectedCategory, operationType } = this.state;\r\n        const { type, rootCategory, onClose } = this.props;\r\n\r\n        const categoryListRootCategory = getCategoriesByType(rootCategory, type);\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <DialogContent>\r\n\r\n                    <CategoryList\r\n                        rootCategory={categoryListRootCategory}\r\n                        onSelect={(category, event) => this.handleMenuOpen(category, event)}\r\n                        onlySubCategories={true}\r\n                    />\r\n\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                    <Button onClick={onClose} color='primary'>\r\n                        Exit\r\n                    </Button>\r\n                </DialogActions>\r\n\r\n                {this.renderOptionMenu(anchorEl, selectedCategory)}\r\n\r\n                {this.renderCategoryForm(operationType, selectedCategory)}\r\n                {this.renderDeleteCategoryDialog(operationType, selectedCategory)}\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryOptionTab.propTypes = {\r\n    type: PropTypes.oneOf(['expense', 'income']).isRequired,\r\n    rootCategory: categoryShape.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    onRootCategoryChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryOptionTab;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { categoryShape } from '../../config/propTypesCommon';\r\nimport withMobileDialog from '@material-ui/core/es/withMobileDialog/withMobileDialog';\r\nimport { desktopDialogMaxWidth, mobileDialogBreakpoint } from '../../config/theme';\r\nimport Dialog from '@material-ui/core/Dialog/Dialog';\r\nimport Tabs from '@material-ui/core/es/Tabs/Tabs';\r\nimport Tab from '@material-ui/core/es/Tab/Tab';\r\nimport CategoryOptionTab from './CategoryOptionTab';\r\n\r\n\r\nclass CategoryOptionDialog extends PureComponent {\r\n    state = {\r\n        openTabId: 0,\r\n    };\r\n\r\n    handleTabChange = (event, openTabId) => {\r\n        this.setState({ openTabId });\r\n    };\r\n\r\n    renderCategoryTab = (openTabId, tabId, categoryType) => {\r\n        if (openTabId !==tabId) return null;\r\n        const { rootCategory, onRootCategoryChange, onClose } = this.props;\r\n        return (\r\n            <CategoryOptionTab\r\n                type={categoryType}\r\n                rootCategory={rootCategory}\r\n                onClose={onClose}\r\n                onRootCategoryChange={onRootCategoryChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { openTabId } = this.state;\r\n        const { open, onClose, rootCategory, fullScreen } = this.props;\r\n\r\n        if (!rootCategory) return null;\r\n        return (\r\n            <Dialog\r\n                fullScreen={fullScreen}\r\n                scroll={'body'}\r\n                maxWidth={desktopDialogMaxWidth}\r\n                fullWidth={true}\r\n\r\n                open={open}\r\n                onClose={onClose}\r\n                disableBackdropClick={true}\r\n                onEscapeKeyDown={onClose}\r\n                aria-labelledby='category-tab-dialog'\r\n            >\r\n\r\n                <Tabs\r\n                    value={openTabId}\r\n                    onChange={this.handleTabChange}\r\n                    indicatorColor='primary'\r\n                    textColor='primary'\r\n                    centered\r\n                    fullWidth\r\n                >\r\n\r\n                    <Tab label='Income' />\r\n                    <Tab label='Expense' />\r\n\r\n                </Tabs>\r\n\r\n                {this.renderCategoryTab(openTabId, 0, 'income')}\r\n                {this.renderCategoryTab(openTabId, 1, 'expense')}\r\n\r\n            </Dialog>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryOptionDialog.propTypes = {\r\n    rootCategory: categoryShape,\r\n    onRootCategoryChange: PropTypes.func.isRequired,\r\n\r\n    open: PropTypes.bool.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    fullScreen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default withMobileDialog({ breakpoint: mobileDialogBreakpoint })(CategoryOptionDialog);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText/ListItemText';\r\nimport ListItem from '@material-ui/core/ListItem/ListItem';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nconst styles = theme => ({\r\n    active: {\r\n        backgroundColor: theme.palette.action.selected\r\n    }\r\n});\r\n\r\nconst NavigationLink = ({ icon, label, to, classes }) => {\r\n    return (\r\n        <ListItem\r\n            button\r\n            component={NavLink}\r\n            to={to}\r\n            activeClassName={classes.active}\r\n        >\r\n\r\n            <ListItemIcon className='m-0'>\r\n                {icon}\r\n            </ListItemIcon>\r\n\r\n            <ListItemText primary={label} />\r\n\r\n        </ListItem>\r\n    );\r\n};\r\n\r\nNavigationLink.propTypes = {\r\n    icon: PropTypes.element.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    to: PropTypes.string.isRequired,\r\n\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavigationLink);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Checkbox from '@material-ui/core/es/Checkbox/Checkbox';\r\nimport { categoryShape } from '../../../../config/propTypesCommon';\r\n\r\n\r\nclass CategoryCheckbox extends PureComponent {\r\n\r\n    isOppositeCategorySelected = (category, selectedCategories) => {\r\n        return selectedCategories\r\n            .map(c => c.path)\r\n            .filter(([_, root]) => (category.path[1] !== root && category.idCategory !== root))\r\n            .length > 0;\r\n    };\r\n    isCategorySelected = (category, selectedCategories) => {\r\n        return selectedCategories.includes(category);\r\n    };\r\n    isCategoryChildOfSelectedCategory = (category, selectedCategories) => {\r\n        return selectedCategories\r\n            .map(c => c.idCategory)\r\n            .filter(id => category.path.includes(id))\r\n            .length > 0;\r\n    };\r\n    isCategoryParentOfSelectedCategory = (category, selectedCategories) => {\r\n        return selectedCategories\r\n            .map(c => c.path)\r\n            .filter(path => path.includes(category.idCategory))\r\n            .length > 0;\r\n    };\r\n    isCategoryRootCategory = (category) => {\r\n        return [2, 3].includes(category.idCategory);\r\n    };\r\n    getSelectedSubCategoriesCount = (category, selectedCategories) => {\r\n        return category.subCategories\r\n            .filter(c => selectedCategories.includes(c))\r\n            .length;\r\n    };\r\n    isAllSubCategoriesSelected = (category, selectedSubCategoriesCount) => {\r\n        return selectedSubCategoriesCount > 0 && category.subCategories.length === selectedSubCategoriesCount;\r\n    };\r\n\r\n    getCheckboxProps = () => {\r\n        const { category, selectedCategories } = this.props;\r\n        const props = {\r\n            onChange: (event, checked) => this.handleCheckboxChange(category, checked),\r\n            color: 'default',\r\n            checked: false,\r\n        };\r\n\r\n        if (this.isOppositeCategorySelected(category, selectedCategories)) {\r\n            props.disabled = true;\r\n            return props;\r\n        }\r\n\r\n        if (this.isCategorySelected(category, selectedCategories)) {\r\n            props.color = 'primary';\r\n            props.checked = true;\r\n            return props;\r\n        }\r\n\r\n        if (this.isCategoryChildOfSelectedCategory(category, selectedCategories)) {\r\n            props.checked = true;\r\n            props.disabled = true;\r\n            return props;\r\n        }\r\n\r\n        const selectedSubCategoriesCount = this.getSelectedSubCategoriesCount(category, selectedCategories);\r\n\r\n        if (this.isCategoryRootCategory(category)) {\r\n            props.onChange = (event, checked) => this.handleRootCheckboxChange(category, checked);\r\n        }\r\n\r\n        if (this.isAllSubCategoriesSelected(category, selectedSubCategoriesCount)) {\r\n            props.checked = true;\r\n            return props;\r\n        }\r\n\r\n        if (this.isCategoryParentOfSelectedCategory(category, selectedCategories)) {\r\n            props.indeterminate = true;\r\n        }\r\n\r\n        return props;\r\n    };\r\n\r\n\r\n    handleCheckboxChange = (category, checked) => {\r\n        const { selectedCategories: currentSelectedCategories, onCheckboxChange } = this.props;\r\n        const selectedCategories = !checked ?\r\n            currentSelectedCategories.filter(c => c.idCategory !== category.idCategory) :\r\n            [...currentSelectedCategories, category];\r\n        const newSelectedCategories = selectedCategories.filter(({ path }) => !path.includes(category.idCategory));\r\n        onCheckboxChange(newSelectedCategories);\r\n    };\r\n\r\n    handleRootCheckboxChange = (rootCategory, checked) => {\r\n        const { onCheckboxChange } = this.props;\r\n        const newSelectedCategories = checked ? rootCategory.subCategories : [];\r\n        onCheckboxChange(newSelectedCategories);\r\n    };\r\n\r\n\r\n    render() {\r\n        return <Checkbox {...this.getCheckboxProps()} />;\r\n    }\r\n}\r\n\r\nCategoryCheckbox.propTypes = {\r\n    category: categoryShape.isRequired,\r\n    selectedCategories: PropTypes.arrayOf(categoryShape).isRequired,\r\n    onCheckboxChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CategoryCheckbox;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\r\nimport ListItemSecondaryAction from '@material-ui/core/es/ListItemSecondaryAction/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/es/ListItemText/ListItemText';\r\nimport IconButton from '@material-ui/core/es/IconButton/IconButton';\r\nimport ListItem from '@material-ui/core/es/ListItem/ListItem';\r\nimport Collapse from '@material-ui/core/es/Collapse/Collapse';\r\nimport List from '@material-ui/core/es/List/List';\r\nimport { getCategoryName } from '../../../services/entities-services/categoryService';\r\nimport CategoryCheckbox from '../forms/inputs/CategoryCheckbox';\r\nimport { categoryShape } from '../../../config/propTypesCommon';\r\n\r\n\r\nclass CategoryCheckboxList extends PureComponent {\r\n\r\n    handleToggleOpen = (category, isExpanded) => {\r\n        const { expandedCategories: currentExpandedCategories } = this.props;\r\n        const expandedCategories = isExpanded ?\r\n            currentExpandedCategories.filter(c => c.idCategory !== category.idCategory) :\r\n            [...currentExpandedCategories, category];\r\n        this.props.onCategoryExpandToggle(expandedCategories);\r\n    };\r\n\r\n    handleCheckboxChange = newSelectedCategories => {\r\n        this.props.onSelectedCategoriesChange(newSelectedCategories);\r\n    };\r\n\r\n    renderCategory = (category, depth) => {\r\n        const { expandedCategories, selectedCategories } = this.props;\r\n\r\n        const isExpanded = expandedCategories.includes(category);\r\n        const expandIcon = isExpanded ? <ExpandLess /> : <ExpandMore />;\r\n        const haveChildren = category.subCategories.length > 0;\r\n        const categoryDisabled = this.props.categoryDisabled && this.props.categoryDisabled(category);\r\n\r\n        return (\r\n            <React.Fragment key={category.idCategory}>\r\n\r\n                <ListItem button disabled={categoryDisabled} style={{ paddingLeft: depth * 20 + 16 }}\r\n                    onClick={() => this.handleToggleOpen(category, isExpanded)}>\r\n\r\n                    <ListItemText primary={getCategoryName(category)} />\r\n\r\n                    {\r\n                        <ListItemSecondaryAction>\r\n\r\n                            {haveChildren && (\r\n                                <IconButton onClick={() => this.handleToggleOpen(category, isExpanded)}>\r\n                                    {expandIcon}\r\n                                </IconButton>\r\n                            )}\r\n\r\n                            <CategoryCheckbox\r\n                                category={category}\r\n                                selectedCategories={selectedCategories}\r\n                                onCheckboxChange={this.handleCheckboxChange}\r\n                            />\r\n\r\n                        </ListItemSecondaryAction>\r\n                    }\r\n\r\n                </ListItem>\r\n\r\n                {\r\n                    haveChildren && (\r\n                        <Collapse in={isExpanded} timeout='auto' unmountOnExit>\r\n                            <List\r\n                                dense={this.props.dense}\r\n                                disablePadding={true}\r\n                            >\r\n                                {category.subCategories.map(c => this.renderCategory(c, depth + 1))}\r\n                            </List>\r\n                        </Collapse>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { rootCategory, className, dense } = this.props;\r\n\r\n        return (\r\n            <List\r\n                dense={dense}\r\n                className={className}\r\n            >\r\n\r\n                {rootCategory.subCategories.map(c => this.renderCategory(c, 0))}\r\n\r\n            </List>\r\n        );\r\n    }\r\n}\r\n\r\nCategoryCheckboxList.propTypes = {\r\n    expandedCategories: PropTypes.arrayOf(categoryShape).isRequired,\r\n    selectedCategories: PropTypes.arrayOf(categoryShape).isRequired,\r\n    onCategoryExpandToggle: PropTypes.func.isRequired,\r\n    onSelectedCategoriesChange: PropTypes.func.isRequired,\r\n\r\n    rootCategory: categoryShape.isRequired,\r\n    className: PropTypes.string,\r\n    dense: PropTypes.bool,\r\n};\r\n\r\nexport default CategoryCheckboxList;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateTime } from 'luxon';\r\nimport CategoryCheckboxList from '../common/lists/CategoryCheckboxList';\r\nimport { categoryShape } from '../../config/propTypesCommon';\r\nimport { getCategoriesIds } from '../../services/entities-services/categoryService';\r\nimport DateInput from '../common/forms/inputs/DateInput';\r\nimport { formInputMargin } from '../../config/theme';\r\n\r\n\r\nclass EntriesSelectionForm extends PureComponent {\r\n    state = {\r\n        data: {\r\n            from: '',\r\n            to: '',\r\n        },\r\n        errors: {},\r\n    };\r\n\r\n    componentDidMount() {\r\n        const data = { ...this.state.data };\r\n\r\n        const now = DateTime.local();\r\n        data.from = now.minus({ months: 1 }).toISO();\r\n        data.to = now.plus({days: 1}).toISO();\r\n\r\n        const { rootCategory, selectedCategories, onSelectionSpecChange } = this.props;\r\n        if (selectedCategories.length === 0) {\r\n            const defaultSelectedCategories = [];\r\n            rootCategory.subCategories[1].subCategories.forEach(c => defaultSelectedCategories.push(c));\r\n            onSelectionSpecChange(this.getSelectionSpec(data.from, data.to, defaultSelectedCategories));\r\n        }\r\n\r\n        this.setState({ data });\r\n    }\r\n\r\n    getSelectionSpec = (fromISO, toISO, selectedCategories) => {\r\n        const categoriesType = selectedCategories.length > 0 ? (selectedCategories[0].path[1] === 2 ? 1 : -1) : 0;\r\n        // -1 => expense categories selected\r\n        // 0 => no category selected\r\n        // 1 => income categories selected\r\n\r\n        return {\r\n            from: DateTime.fromISO(fromISO),\r\n            to: DateTime.fromISO(toISO),\r\n            selectedCategories: selectedCategories,\r\n            selectedCategoriesType: categoriesType,\r\n            selectedCategoriesIds: getCategoriesIds(selectedCategories),\r\n        };\r\n    };\r\n\r\n    handleFromDateChange = newFrom => {\r\n        const errors = { ...this.state.errors };\r\n        const { to } = this.state.data;\r\n\r\n        if (DateTime.fromISO(newFrom) > DateTime.fromISO(to)) {\r\n            errors.from = 'Should be before \\'To\\' date.';\r\n            errors.to = '';\r\n        } else {\r\n            delete errors.from;\r\n            delete errors.to;\r\n            const getSelectionSpec = this.getSelectionSpec(newFrom, to, this.props.selectedCategories);\r\n            this.props.onSelectionSpecChange(getSelectionSpec);\r\n        }\r\n        this.setState({ data: { from: newFrom, to: to }, errors });\r\n    };\r\n\r\n    handleToDateChange = newTo => {\r\n        const errors = { ...this.state.errors };\r\n        const { from } = this.state.data;\r\n\r\n        if (DateTime.fromISO(from) > DateTime.fromISO(newTo)) {\r\n            errors.from = '';\r\n            errors.to = 'Should be after \\'From\\' date.';\r\n        } else {\r\n            delete errors.from;\r\n            delete errors.to;\r\n            const getSelectionSpec = this.getSelectionSpec(from, newTo, this.props.selectedCategories);\r\n            this.props.onSelectionSpecChange(getSelectionSpec);\r\n        }\r\n        this.setState({ data: { from: from, to: newTo }, errors });\r\n    };\r\n\r\n    handleSelectedCategoriesChange = selectedCategories => {\r\n        const { from, to} = this.state.data;\r\n        const selectionSpec = this.getSelectionSpec(from, to, selectedCategories);\r\n        this.props.onSelectionSpecChange(selectionSpec);\r\n        this.setState({ selectedCategories });\r\n    };\r\n\r\n    render() {\r\n        const { rootCategory, expandedCategories, selectedCategories, onCategoryExpandToggle } = this.props;\r\n        const { from, to } = this.state.data;\r\n        const { from: fromErrors, to: toErrors } = this.state.errors;\r\n\r\n        return (\r\n            <form className='selection-entries-form'>\r\n\r\n                <DateInput\r\n                    name='from'\r\n                    label='From'\r\n                    value={from}\r\n                    onChange={this.handleFromDateChange}\r\n                    className='from-input'\r\n                    error={fromErrors}\r\n                    margin={formInputMargin}\r\n                />\r\n\r\n                <DateInput\r\n                    name='to'\r\n                    label='To'\r\n                    value={to}\r\n                    onChange={this.handleToDateChange}\r\n                    className='to-input'\r\n                    error={toErrors}\r\n                    margin={formInputMargin}\r\n                />\r\n\r\n                <CategoryCheckboxList\r\n                    expandedCategories={expandedCategories}\r\n                    selectedCategories={selectedCategories}\r\n                    onCategoryExpandToggle={onCategoryExpandToggle}\r\n                    onSelectedCategoriesChange={this.handleSelectedCategoriesChange}\r\n\r\n                    rootCategory={rootCategory}\r\n                    className='categories-input'\r\n                    dense={true}\r\n                />\r\n\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nEntriesSelectionForm.propTypes = {\r\n    rootCategory: categoryShape.isRequired,\r\n    expandedCategories: PropTypes.arrayOf(categoryShape).isRequired,\r\n    selectedCategories: PropTypes.arrayOf(categoryShape).isRequired,\r\n    onCategoryExpandToggle: PropTypes.func.isRequired,\r\n    onSelectionSpecChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default EntriesSelectionForm;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n    Add,\r\n    BarChart,\r\n    Menu,\r\n    PieChart,\r\n    PlaylistAdd,\r\n    PowerSettingsNew,\r\n    Restore,\r\n    Settings,\r\n    ShowChart,\r\n    Info,\r\n    AccessTime,\r\n    Today,\r\n    ViewComfy,\r\n    TrendingDown,\r\n    TrendingUp,\r\n} from '@material-ui/icons';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/es/Button/Button';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport ButtonWithMenu from '../common/menus/ButtonWithMenu';\r\nimport EntryForm from '../forms/EntryForm';\r\nimport UserOptionDialog from '../dialogs/UserOptionDialog';\r\nimport CategoryOptionDialog from '../dialogs/CategoryOptionDialog';\r\nimport { categoryShape } from '../../config/propTypesCommon';\r\nimport NavigationLink from './NavigationLink';\r\nimport EntriesSelectionForm from '../forms/EntriesSelectionForm';\r\n\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst styles = theme => ({\r\n    drawer: {\r\n        [theme.breakpoints.up('md')]: {\r\n            width: drawerWidth,\r\n            flexShrink: 0,\r\n        },\r\n    },\r\n    appBar: {\r\n        marginLeft: drawerWidth,\r\n        [theme.breakpoints.up('md')]: {\r\n            width: `calc(100% - ${drawerWidth}px)`,\r\n        },\r\n    },\r\n    fakeToolbar: theme.mixins.toolbar,\r\n    toolbar: {\r\n        justifyContent: 'flex-end',\r\n    },\r\n    menuButton: {\r\n        marginRight: 'auto',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '0 16px',\r\n        ...theme.mixins.toolbar,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    applicationContent: {\r\n        flexGrow: 1,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n\r\nclass Navbar extends PureComponent {\r\n    state = {\r\n        mobileOpen: false,\r\n        incomeFormDialogOpen: false,\r\n        expenseFormDialogOpen: false,\r\n        userOptionDialogOpen: false,\r\n        categoryOptionDialogOpen: false,\r\n\r\n        expandedCategories: [],\r\n        selectedCategories: [],\r\n    };\r\n\r\n    newEntryOptions = [\r\n        {\r\n            label: 'Income',\r\n            icon: <TrendingUp className='positive' />,\r\n            onClick: () => this.setState({ incomeFormDialogOpen: true }),\r\n        },\r\n        {\r\n            label: 'Expense',\r\n            icon: <TrendingDown className='negative' />,\r\n            onClick: () => this.setState({ expenseFormDialogOpen: true }),\r\n        },\r\n    ];\r\n\r\n    userOptions = [\r\n        {\r\n            label: 'Settings',\r\n            icon: <Settings />,\r\n            onClick: () => this.setState({ userOptionDialogOpen: true }),\r\n        },\r\n        {\r\n            label: 'Categories',\r\n            icon: <PlaylistAdd />,\r\n            onClick: () => this.setState({ categoryOptionDialogOpen: true }),\r\n        },\r\n        {\r\n            label: 'Logout',\r\n            icon: <PowerSettingsNew />,\r\n            component: Link,\r\n            to: '/logout',\r\n        },\r\n    ];\r\n\r\n\r\n    handleDrawerToggle = () => {\r\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\r\n    };\r\n\r\n    handleCategoryExpandToggle = expandedCategories => {\r\n        this.setState({ expandedCategories });\r\n    };\r\n\r\n    handleSelectionSpecChange = selectionSpec => {\r\n        this.props.onSelectionSpecChange(selectionSpec);\r\n        const { selectedCategories } = selectionSpec;\r\n        this.setState({ selectedCategories });\r\n    };\r\n\r\n    handleDialogClose = () => {\r\n        this.setState({\r\n            incomeFormDialogOpen: false,\r\n            expenseFormDialogOpen: false,\r\n            userOptionDialogOpen: false,\r\n            categoryOptionDialogOpen: false,\r\n        });\r\n    };\r\n\r\n    renderEntryFormDialog = (type, currency) => {\r\n        const { incomeFormDialogOpen, expenseFormDialogOpen } = this.state;\r\n        const { rootCategory, onEntriesChange } = this.props;\r\n        const open = type === 'income' ? incomeFormDialogOpen : expenseFormDialogOpen;\r\n        if (!open) return null;\r\n        return (\r\n            <EntryForm\r\n                type={type}\r\n                currency={currency}\r\n                rootCategory={rootCategory}\r\n                open={open}\r\n                onClose={this.handleDialogClose}\r\n                onEntriesChange={onEntriesChange}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderUserOptionDialog = () => {\r\n        const { userOptionDialogOpen } = this.state;\r\n        if (!userOptionDialogOpen) return null;\r\n        return (\r\n            <UserOptionDialog\r\n                open={userOptionDialogOpen}\r\n                onClose={this.handleDialogClose}\r\n            />\r\n        );\r\n    };\r\n\r\n    renderCategoryOptionDialog = () => {\r\n        const { categoryOptionDialogOpen } = this.state;\r\n        if (!categoryOptionDialogOpen) return null;\r\n        const { rootCategory, onRootCategoryChange } = this.props;\r\n        return (\r\n            <CategoryOptionDialog\r\n                open={categoryOptionDialogOpen}\r\n                onClose={this.handleDialogClose}\r\n                rootCategory={rootCategory}\r\n                onRootCategoryChange={onRootCategoryChange}\r\n            />\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        const { expandedCategories, selectedCategories } = this.state;\r\n        const { classes, theme, user, rootCategory, children } = this.props;\r\n\r\n        const drawer = (\r\n            <div>\r\n\r\n                <Typography className={classes.drawerHeader} variant='h6'>\r\n                    Budget Monitor\r\n                </Typography>\r\n\r\n                <Divider />\r\n\r\n                {!user && (\r\n                    <React.Fragment>\r\n                        <List>\r\n                            <NavigationLink\r\n                                icon={<Info />}\r\n                                label={'About Budget Monitor'}\r\n                                to={'/about'}\r\n                            />\r\n                        </List>\r\n                    </React.Fragment>\r\n                )}\r\n\r\n                {user && (\r\n                    <React.Fragment>\r\n                        <List>\r\n                            <NavigationLink\r\n                                icon={<Restore />}\r\n                                label={'Recent'}\r\n                                to={'/recent'}\r\n                            />\r\n\r\n                            < NavigationLink\r\n                                icon={<Today />}\r\n                                label={'Entries by day'}\r\n                                to={'/daily'}\r\n                            />\r\n\r\n                            <NavigationLink\r\n                                icon={<BarChart />}\r\n                                label={'Bar chart'}\r\n                                to={'/barChart'}\r\n                            />\r\n\r\n                            <NavigationLink\r\n                                icon={<ShowChart />}\r\n                                label={'Line chart'}\r\n                                to={'/lineChart'}\r\n                            />\r\n\r\n                            <NavigationLink\r\n                                icon={<PieChart />}\r\n                                label={'Sunburst chart'}\r\n                                to={'/sunburstChart'}\r\n                            />\r\n\r\n                            <NavigationLink\r\n                                icon={<AccessTime />}\r\n                                label={'Hourly chart'}\r\n                                to={'/hourlyChart'}\r\n                            />\r\n\r\n                            <NavigationLink\r\n                                icon={<ViewComfy />}\r\n                                label={'Calendar chart'}\r\n                                to={'/calendarChart'}\r\n                            />\r\n                        </List>\r\n                        <Divider />\r\n                    </React.Fragment>\r\n                )}\r\n\r\n                {user && rootCategory && (\r\n                    <List>\r\n                        <EntriesSelectionForm\r\n                            rootCategory={rootCategory}\r\n                            expandedCategories={expandedCategories}\r\n                            selectedCategories={selectedCategories}\r\n                            onCategoryExpandToggle={this.handleCategoryExpandToggle}\r\n                            onSelectionSpecChange={this.handleSelectionSpecChange}\r\n                        />\r\n                    </List>\r\n                )}\r\n\r\n            </div>\r\n        );\r\n\r\n        return (\r\n            <React.Fragment>\r\n\r\n                <AppBar position=\"fixed\" className={classes.appBar}>\r\n                    <Toolbar className={classes.toolbar}>\r\n\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            onClick={this.handleDrawerToggle}\r\n                            className={classes.menuButton}\r\n                        >\r\n                            <Menu />\r\n                        </IconButton>\r\n\r\n                        {!user && (\r\n                            <React.Fragment>\r\n                                <Button component={NavLink} to={'/login'} color='inherit'>\r\n                                    Login\r\n                                </Button>\r\n                                <Button component={NavLink} to={'/register'} color='inherit'>\r\n                                    Register\r\n                                </Button>\r\n                            </React.Fragment>\r\n                        )}\r\n\r\n                        {user && !_.isEmpty(rootCategory) && (\r\n                            <React.Fragment>\r\n\r\n                                <ButtonWithMenu\r\n                                    buttonLabel={<Add />}\r\n                                    buttonTooltip='Add'\r\n                                    menuOptions={this.newEntryOptions}\r\n                                />\r\n\r\n                                {this.renderEntryFormDialog('income', user.currency)}\r\n                                {this.renderEntryFormDialog('expense', user.currency)}\r\n\r\n\r\n                                <ButtonWithMenu\r\n                                    buttonLabel={user.sub}\r\n                                    buttonTooltip='Options'\r\n                                    menuOptions={this.userOptions}\r\n                                />\r\n\r\n                                {this.renderUserOptionDialog()}\r\n                                {this.renderCategoryOptionDialog()}\r\n\r\n                            </React.Fragment>\r\n                        )}\r\n\r\n\r\n                    </Toolbar>\r\n                </AppBar>\r\n\r\n                <nav className={classes.drawer}>\r\n\r\n                    <Hidden mdUp implementation=\"css\">\r\n                        <Drawer\r\n                            container={this.props.container}\r\n                            variant=\"temporary\"\r\n                            anchor={theme.direction === 'rtl' ? 'right' : 'left'}\r\n                            open={this.state.mobileOpen}\r\n                            onClose={this.handleDrawerToggle}\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                        >\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n\r\n\r\n                    <Hidden smDown implementation=\"css\">\r\n                        <Drawer\r\n                            classes={{\r\n                                paper: classes.drawerPaper,\r\n                            }}\r\n                            variant=\"permanent\"\r\n                            open\r\n                        >\r\n                            {drawer}\r\n                        </Drawer>\r\n                    </Hidden>\r\n\r\n\r\n                </nav>\r\n\r\n                <div className={classes.content}>\r\n                    <div className={classes.fakeToolbar} />\r\n                    <main className={classes.applicationContent}>\r\n                        {children}\r\n                    </main>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nNavbar.propTypes = {\r\n    user: PropTypes.object,\r\n    rootCategory: categoryShape,\r\n    onRootCategoryChange: PropTypes.func.isRequired,\r\n    onEntriesChange: PropTypes.func.isRequired,\r\n    onSelectionSpecChange: PropTypes.func.isRequired,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node,\r\n    ]).isRequired,\r\n\r\n    classes: PropTypes.object.isRequired,\r\n    container: PropTypes.object,\r\n    theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(Navbar);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport withStyles from '@material-ui/core/es/styles/withStyles';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\n\r\n\r\nconst styles = {\r\n    containerWrapper: {\r\n        flexGrow: 1,\r\n        minWidth: '300px',\r\n        position: 'relative',\r\n    },\r\n    chartWrapper: {\r\n        height: 'calc(100% - 4px)',\r\n        width: '100%',\r\n        position: 'absolute',\r\n    },\r\n    withTitle: {\r\n        height: 'calc(100% - 36px)',\r\n    },\r\n    withTitleAndCaption: {\r\n        height: 'calc(100% - 55px)',\r\n    },\r\n    chartDescription: {\r\n        paddingLeft: '12px',\r\n    },\r\n};\r\n\r\n\r\nconst ChartWrapper = ({ title, caption, fullWidth = false, children, classes }) => {\r\n    const chartWrapperClassName = [\r\n        {element: true, className: classes.chartWrapper},\r\n        {element: title, className: classes.withTitle},\r\n        {element: caption, className: classes.withTitleAndCaption},\r\n    ].filter(e => e.element).map(e => e.className).join(' ');\r\n    const wrapperOptions = fullWidth ? { width: '100%' } : null;\r\n\r\n    return (\r\n        <div className={classes.containerWrapper} style={wrapperOptions}>\r\n            {\r\n                title && (\r\n                    <Typography variant='h6' className={classes.chartDescription}>\r\n                        {title}\r\n                    </Typography>\r\n                )\r\n            }\r\n            {\r\n                caption && (\r\n                    <Typography variant='caption' className={classes.chartDescription}>\r\n                        {caption}\r\n                    </Typography>\r\n                )\r\n            }\r\n            <div className={chartWrapperClassName}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nChartWrapper.propTypes = {\r\n    title: PropTypes.string,\r\n    caption: PropTypes.string,\r\n    fullWidth: PropTypes.bool,\r\n    children: PropTypes.element.isRequired,\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ChartWrapper);\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateTime } from 'luxon';\r\nimport LinearProgress from '@material-ui/core/es/LinearProgress/LinearProgress';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport ChartWrapper from './ChartWrapper';\r\n\r\n\r\nclass BarChart extends PureComponent {\r\n\r\n    tooltip = ({ indexValue, id: category, value }) => {\r\n        const { currency } = this.props;\r\n        const date = DateTime.fromISO(indexValue);\r\n        let formattedDate;\r\n        if (indexValue.includes('W')) {\r\n            const from = date.toFormat('dd');\r\n            const to = date.plus({ days: 6 }).toFormat('dd LLL yyyy');\r\n            formattedDate = `${from} - ${to}`;\r\n        } else {\r\n            formattedDate = date.toFormat('LLLL yyyy');\r\n        }\r\n        return (\r\n            <Typography variant='caption' className='bar-chart-tooltip'>\r\n                <div className='time-period'>{formattedDate}</div>\r\n                <div className='category'>{category}</div>\r\n                <div className='value'>{`${value.toFixed(2)} ${currency}`}</div>\r\n            </Typography>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { dataStructure, currency, groupMode } = this.props;\r\n\r\n        if (!dataStructure || !currency) return <LinearProgress style={{ width: '100%' }} />;\r\n\r\n        const { timePeriod, keys, data } = dataStructure;\r\n        if (keys.length === 0 || data.length === 0) return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n\r\n        return (\r\n            <div className='chart-area'>\r\n                <ChartWrapper>\r\n\r\n                    <ResponsiveBar\r\n                        data={data}\r\n                        keys={keys}\r\n                        indexBy='timePeriod'\r\n                        margin={{\r\n                            top: 20,\r\n                            right: 130,\r\n                            bottom: 55,\r\n                            left: 90,\r\n                        }}\r\n                        padding={0.3}\r\n                        groupMode={groupMode ? 'grouped' : 'stacked'}\r\n                        colors='nivo'\r\n                        colorBy='id'\r\n                        borderColor='inherit:darker(1.6)'\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        axisBottom={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: timePeriod,\r\n                            legendPosition: 'middle',\r\n                            legendOffset: 36,\r\n                        }}\r\n                        axisLeft={{\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: currency,\r\n                            legendPosition: 'middle',\r\n                            legendOffset: -70,\r\n                            format: x => x.toFixed(2),\r\n                        }}\r\n                        labelSkipWidth={12}\r\n                        labelSkipHeight={12}\r\n                        labelTextColor='inherit:darker(1.6)'\r\n                        animate={true}\r\n                        motionStiffness={90}\r\n                        motionDamping={15}\r\n                        legends={[\r\n                            {\r\n                                dataFrom: 'keys',\r\n                                anchor: 'bottom-right',\r\n                                direction: 'column',\r\n                                justify: false,\r\n                                translateX: 120,\r\n                                translateY: 0,\r\n                                itemsSpacing: 2,\r\n                                itemWidth: 100,\r\n                                itemHeight: 20,\r\n                                itemDirection: 'left-to-right',\r\n                                itemOpacity: 0.85,\r\n                                symbolSize: 20,\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemOpacity: 1,\r\n                                        },\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ]}\r\n                        tooltip={this.tooltip}\r\n                    />\r\n\r\n                </ChartWrapper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nBarChart.propTypes = {\r\n    dataStructure: PropTypes.shape({\r\n        timePeriod: PropTypes.string.isRequired,\r\n        keys: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        data: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    }),\r\n    currency: PropTypes.string,\r\n    groupMode: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BarChart;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateTime } from 'luxon';\r\nimport LinearProgress from '@material-ui/core/es/LinearProgress/LinearProgress';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { ResponsiveCalendar } from '@nivo/calendar';\r\nimport ChartWrapper from './ChartWrapper';\r\n\r\n\r\nclass CalendarChart extends PureComponent {\r\n\r\n    tooltip = ({ date, value }) => {\r\n        const { currency } = this.props;\r\n        const formattedDate = DateTime.fromJSDate(date).toFormat('dd MMMM, cccc');\r\n        return (\r\n            <Typography variant='caption' className='calendar-chart-tooltip'>\r\n                <div className='date'>{formattedDate}</div>\r\n                <div className='value'>{`${value.toFixed(2)} ${currency}`}</div>\r\n            </Typography>\r\n        );\r\n    };\r\n\r\n    renderCalendarChart = (from, to, data, colors) => {\r\n        return (\r\n            <ResponsiveCalendar\r\n                data={data}\r\n                from={from}\r\n                to={to}\r\n                emptyColor='#eeeeee'\r\n                colors={colors}\r\n                margin={{\r\n                    top: 30,\r\n                    right: 30,\r\n                    bottom: 60,\r\n                    left: 30,\r\n                }}\r\n                yearSpacing={40}\r\n                monthBorderWidth={2}\r\n                monthBorderColor='#000000'\r\n                monthLegendOffset={10}\r\n                monthLegend={(year, month) => DateTime.local(year, month + 1).toFormat('LLL')}\r\n                dayBorderWidth={2}\r\n                dayBorderColor='#ffffff'\r\n                legends={[\r\n                    {\r\n                        anchor: 'bottom-right',\r\n                        direction: 'row',\r\n                        translateY: 36,\r\n                        itemCount: 4,\r\n                        itemWidth: 34,\r\n                        itemHeight: 36,\r\n                        itemDirection: 'top-to-bottom',\r\n                    },\r\n                ]}\r\n                tooltip={this.tooltip}\r\n            />\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { dataStructure, currency } = this.props;\r\n\r\n        if (!dataStructure || !currency) return <LinearProgress style={{ width: '100%' }} />;\r\n\r\n        const { from, to, incomeData, expenseData } = dataStructure;\r\n        if (incomeData.length === 0 && expenseData.length === 0)\r\n            return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n\r\n        const rowsCount = to.match(/(\\d{4})/)[0] - from.match(/(\\d{4})/)[0];\r\n        const options = { maxHeight: `${(260 + rowsCount * 160) * 2}px` };\r\n\r\n        return (\r\n            <div className='chart-area' style={options}>\r\n\r\n                <ChartWrapper\r\n                    title='Income'\r\n                    fullWidth={true}\r\n                >\r\n\r\n                    {this.renderCalendarChart(from, to, incomeData, [\r\n                        '#98f48a',\r\n                        '#71f463',\r\n                        '#5bf451',\r\n                        '#12f419',\r\n                    ])}\r\n\r\n                </ChartWrapper>\r\n\r\n                <ChartWrapper\r\n                    title='Expense'\r\n                    fullWidth={true}\r\n                >\r\n\r\n                    {this.renderCalendarChart(from, to, expenseData, [\r\n                        '#f40c11',\r\n                        '#f43a31',\r\n                        '#f46d63',\r\n                        '#f4987a',\r\n                    ])}\r\n\r\n                </ChartWrapper>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCalendarChart.propTypes = {\r\n    dataStructure: PropTypes.shape({\r\n        from: PropTypes.string.isRequired,\r\n        to: PropTypes.string.isRequired,\r\n        incomeData: PropTypes.arrayOf(PropTypes.shape({\r\n            day: PropTypes.string.isRequired,\r\n            value: PropTypes.number.isRequired,\r\n        })).isRequired,\r\n        expenseData: PropTypes.arrayOf(PropTypes.shape({\r\n            day: PropTypes.string.isRequired,\r\n            value: PropTypes.number.isRequired,\r\n        })).isRequired,\r\n    }),\r\n    currency: PropTypes.string,\r\n};\r\n\r\nexport default CalendarChart;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinearProgress from '@material-ui/core/es/LinearProgress/LinearProgress';\r\nimport { ResponsiveSunburst } from '@nivo/sunburst';\r\nimport ChartWrapper from './ChartWrapper';\r\n\r\n\r\nconst SunburstChart = ({ dataStructure, currency }) => {\r\n    if (!dataStructure || !currency) return <LinearProgress style={{ width: '100%' }} />;\r\n\r\n    const { incomeTree, expenseTree } = dataStructure;\r\n    if (incomeTree.totalValue === 0 && expenseTree.totalValue === 0)\r\n        return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n\r\n    return (\r\n        <div className='chart-area'>\r\n\r\n            <ChartWrapper\r\n                title='Income categories'\r\n                caption={`Total value: ${incomeTree.totalValue.toFixed(2)} ${currency}`}\r\n            >\r\n\r\n                <ResponsiveSunburst\r\n                    data={incomeTree}\r\n                    margin={{\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                    }}\r\n                    identity='name'\r\n                    value='value'\r\n                    cornerRadius={2}\r\n                    borderWidth={2}\r\n                    borderColor='white'\r\n                    colors='nivo'\r\n                    childColor='inherit:brighter(0.13)'\r\n                    animate={true}\r\n                    motionStiffness={90}\r\n                    motionDamping={15}\r\n                    isInteractive={true}\r\n                />\r\n\r\n            </ChartWrapper>\r\n\r\n            <ChartWrapper\r\n                title='Expense categories'\r\n                caption={`Total value: ${expenseTree.totalValue.toFixed(2)} ${currency}`}\r\n            >\r\n\r\n                <ResponsiveSunburst\r\n                    data={expenseTree}\r\n                    margin={{\r\n                        top: 0,\r\n                        right: 0,\r\n                        bottom: 0,\r\n                        left: 0,\r\n                    }}\r\n                    identity='name'\r\n                    value='value'\r\n                    cornerRadius={2}\r\n                    borderWidth={2}\r\n                    borderColor='white'\r\n                    colors='nivo'\r\n                    childColor='inherit:brighter(0.13)'\r\n                    animate={true}\r\n                    motionStiffness={90}\r\n                    motionDamping={15}\r\n                    isInteractive={true}\r\n                />\r\n\r\n            </ChartWrapper>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nSunburstChart.propTypes = {\r\n    dataStructure: PropTypes.shape({\r\n        incomeTree: PropTypes.object.isRequired,\r\n        expenseTree: PropTypes.object.isRequired,\r\n    }),\r\n    currency: PropTypes.string,\r\n};\r\n\r\nexport default SunburstChart;\r\n","import { DateTime, Interval } from 'luxon';\r\nimport { getCategoryIds } from './entities-services/categoryService';\r\nimport { sort } from './entities-services/entryService';\r\n\r\nfunction sumCategoryValuesInEntry(entry, categoryIds) {\r\n    const totalEntryValue = entry.value;\r\n\r\n    if (categoryIds.includes(entry.idCategory)) {\r\n        return totalEntryValue;\r\n    } else {\r\n        return entry.subEntries\r\n            .filter(subEntry => categoryIds.includes(subEntry.idCategory))\r\n            .reduce((sum, subEntry) => sum + subEntry.value, 0);\r\n    }\r\n}\r\n\r\nexport function prepareDataStructureForBarChart(entries, selectionSpec) {\r\n    if (!entries || !selectionSpec) return null;\r\n    if (entries.length === 0) return { timePeriod: '', keys: [], data: [] };\r\n\r\n    const { from, to, selectedCategories } = selectionSpec;\r\n    const durationInWeeks = Interval.fromDateTimes(from, to).length('weeks');\r\n    const timePeriodUnit = (durationInWeeks > 5) ? 'month' : 'week';\r\n    const format = (timePeriodUnit === 'month') ? 'yyyy-MM' : 'yyyy\\'W\\'WW';\r\n\r\n    const timePeriodEntriesMap = new Map();\r\n\r\n    entries.forEach(entry => {\r\n        const timePeriod = entry.date.toFormat(format);\r\n        const entriesByTimePeriod = timePeriodEntriesMap.get(timePeriod) || [];\r\n        entriesByTimePeriod.push(entry);\r\n        timePeriodEntriesMap.set(timePeriod, entriesByTimePeriod);\r\n    });\r\n\r\n    const selectedCategoryCategoryIdsMap = new Map();\r\n    selectedCategories.forEach(category => selectedCategoryCategoryIdsMap.set(category, getCategoryIds(category)));\r\n\r\n    const data = [];\r\n    timePeriodEntriesMap.forEach((entriesForTimePeriod, timePeriod) => {\r\n        const dataSetForTimePeriod = {};\r\n        selectedCategoryCategoryIdsMap.forEach((categoryIds, category) => {\r\n            const value = entriesForTimePeriod\r\n                .reduce((sum, entry) => sum + Math.abs(sumCategoryValuesInEntry(entry, categoryIds)), 0);\r\n            if (value > 0)\r\n                dataSetForTimePeriod[category.name] = value / 100;\r\n        });\r\n\r\n        data.push({\r\n            timePeriod,\r\n            ...dataSetForTimePeriod,\r\n        });\r\n    });\r\n\r\n    return {\r\n        timePeriod: timePeriodUnit,\r\n        keys: selectedCategories.map(c => c.name),\r\n        data: sort(data, 'timePeriod'),\r\n    };\r\n}\r\n\r\nexport function prepareDataStructureForLineChart(entries, selectionSpec) {\r\n    if (!entries || !selectionSpec) return null;\r\n    if (entries.length === 0) return [];\r\n\r\n    const { selectedCategories } = selectionSpec;\r\n\r\n    const categoryDataMap = new Map();\r\n    const selectedCategoryCategoryIdsMap = new Map();\r\n\r\n    selectedCategories.forEach(category => {\r\n        categoryDataMap.set(category, new Map());\r\n        selectedCategoryCategoryIdsMap.set(category, getCategoryIds(category));\r\n    });\r\n\r\n    entries.forEach(entry => {\r\n        selectedCategoryCategoryIdsMap.forEach((categoryIds, category) => {\r\n            const categoryValue = sumCategoryValuesInEntry(entry, categoryIds);\r\n\r\n            if (categoryValue !== 0) {\r\n                const day = entry.date.toISODate();\r\n                const dayValueMap = categoryDataMap.get(category);\r\n                const valueForDay = dayValueMap.get(day) || 0;\r\n                dayValueMap.set(day, Number((valueForDay + (categoryValue / 100)).toFixed(2)));\r\n            }\r\n        });\r\n    });\r\n\r\n    const dataStructure = [];\r\n    categoryDataMap.forEach((dataForCategory, category) => {\r\n        if (dataForCategory.size > 0) {\r\n            const data = [];\r\n            dataForCategory.forEach((value, day) => data.push({ x: day, y: Number(value.toFixed(2)) }));\r\n            dataStructure.push({\r\n                id: category.name,\r\n                data: sort(data, 'x'),\r\n            });\r\n        }\r\n    });\r\n\r\n    return dataStructure;\r\n}\r\n\r\nexport function prepareDataStructureForSunburstChart(entries, rootCategory) {\r\n    if (!entries || !rootCategory) return null;\r\n\r\n    const incomeIdCategoryNodeMap = new Map();\r\n    const expenseIdCategoryNodeMap = new Map();\r\n\r\n    const mapCategoryToNode = (category, map) => {\r\n        const node = {\r\n            idCategory: category.idCategory,\r\n            name: category.name,\r\n            value: 0,\r\n            children: category.subCategories.map(c => mapCategoryToNode(c, map)),\r\n        };\r\n        map.set(category.idCategory, node);\r\n        return node;\r\n    };\r\n\r\n    const incomeTree = mapCategoryToNode(rootCategory.subCategories.find(c => c.name === 'INCOME_CATEGORY'), incomeIdCategoryNodeMap);\r\n    const expenseTree = mapCategoryToNode(rootCategory.subCategories.find(c => c.name === 'EXPENSE_CATEGORY'), expenseIdCategoryNodeMap);\r\n\r\n    const mapValueToNode = entry => {\r\n        const map = (entry.value > 0) ? incomeIdCategoryNodeMap : expenseIdCategoryNodeMap;\r\n        const node = map.get(entry.idCategory);\r\n        node.value += Math.abs(entry.value) / 100;\r\n    };\r\n\r\n    entries.forEach(entry => {\r\n        mapValueToNode(entry);\r\n        entry.subEntries.forEach(subEntry => mapValueToNode(subEntry));\r\n    });\r\n\r\n    const computeTotalNodeValue = node => {\r\n        const totalValue = node.value + node.children.reduce((sum, node) => sum + computeTotalNodeValue(node), 0);\r\n        node.totalValue = totalValue;\r\n        return totalValue;\r\n    };\r\n\r\n    computeTotalNodeValue(incomeTree);\r\n    computeTotalNodeValue(expenseTree);\r\n\r\n    const removeZeros = node => {\r\n        if (node.totalValue !== 0 || [2, 3].includes(node.idCategory)) {\r\n            const oldChildren = node.children;\r\n            node.children = oldChildren.map(n => removeZeros(n)).filter(n => n);\r\n            return node;\r\n        }\r\n    };\r\n\r\n    return {\r\n        incomeTree: removeZeros(incomeTree),\r\n        expenseTree: removeZeros(expenseTree),\r\n    };\r\n}\r\n\r\nexport function prepareDataStructureForCalendarChart(entries, selectionSpec) {\r\n    if (!entries || !selectionSpec) return null;\r\n    const { from, to } = selectionSpec;\r\n    if (entries.length === 0) return { from: from.toISODate(), to: to.toISODate(), incomeData: [], expenseData: [] };\r\n\r\n\r\n    const incomeDayValueMap = new Map();\r\n    const expenseDayValueMap = new Map();\r\n\r\n    entries.forEach(entry => {\r\n        const dayValueMap = (entry.value > 0) ? incomeDayValueMap : expenseDayValueMap;\r\n        const day = entry.date.toISODate();\r\n        const value = dayValueMap.get(day) || 0;\r\n        dayValueMap.set(day, value + entry.value / 100);\r\n    });\r\n\r\n    const incomeDataArray = [];\r\n    const expenseDataArray = [];\r\n\r\n    incomeDayValueMap.forEach((value, day) => incomeDataArray.push({ day, value }));\r\n    expenseDayValueMap.forEach((value, day) => expenseDataArray.push({ day, value }));\r\n\r\n    return {\r\n        from: from.toISODate(),\r\n        to: to.toISODate(),\r\n        incomeData: incomeDataArray,\r\n        expenseData: expenseDataArray,\r\n    };\r\n}\r\n\r\nexport function prepareDataStructureForHourlyChart(entries, selectionSpec) {\r\n    if (!entries || !selectionSpec) return null;\r\n    if (entries.length === 0) return [];\r\n\r\n    const { selectedCategories } = selectionSpec;\r\n\r\n    const categoryDataMap = new Map();\r\n    const selectedCategoryCategoryIdsMap = new Map();\r\n\r\n    selectedCategories.forEach(category => {\r\n        categoryDataMap.set(category, []);\r\n        selectedCategoryCategoryIdsMap.set(category, getCategoryIds(category));\r\n    });\r\n\r\n    entries.forEach(entry => {\r\n        selectedCategoryCategoryIdsMap.forEach((categoryIds, category) => {\r\n            const categoryValue = sumCategoryValuesInEntry(entry, categoryIds);\r\n\r\n            if (categoryValue !== 0) {\r\n                const data = categoryDataMap.get(category);\r\n                data.push({\r\n                    x: entry.date.toISODate(),\r\n                    y: entry.date.toLocaleString(DateTime.TIME_WITH_SECONDS),\r\n                    date: entry.date,\r\n                    description: entry.description,\r\n                    value: categoryValue / 100,\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    const dataStructure = [];\r\n    categoryDataMap.forEach((data, category) => {\r\n        if (data.length > 0) {\r\n            dataStructure.push({\r\n                id: category.name,\r\n                data: data,\r\n            });\r\n        }\r\n    });\r\n\r\n    return dataStructure;\r\n}\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport logger from './../../services/logService';\r\n\r\n\r\nclass ErrorBoundary extends PureComponent {\r\n    state = {\r\n        hasError: false,\r\n    };\r\n\r\n    static getDerivedStateFromError() {\r\n        return { hasError: true };\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        logger.log(error);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1 style={{ margin: 'auto', marginTop: '64px' }}>Your browser does not support this chart. Try on Chrome.</h1>;\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n};\r\n\r\nexport default ErrorBoundary;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateTime } from 'luxon';\r\nimport LinearProgress from '@material-ui/core/es/LinearProgress/LinearProgress';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { ResponsiveScatterPlot } from '@nivo/scatterplot';\r\nimport ChartWrapper from './ChartWrapper';\r\nimport ErrorBoundary from '../error-boundaries/ErrorBoundary';\r\n\r\n\r\nclass HourlyChart extends PureComponent {\r\n    state = {\r\n        pointId: null,\r\n    };\r\n\r\n    handleMouseMove = point => {\r\n        this.setState({ pointId: point.id });\r\n    };\r\n\r\n    handleMouseLeave = () => {\r\n        this.setState({ pointId: null });\r\n    };\r\n\r\n    getSymbolSize = point => {\r\n        const { pointId } = this.state;\r\n        if (pointId !== null && pointId === point.id) return 16;\r\n        return 8;\r\n    };\r\n\r\n    tooltip = ({ serie: { id }, date, description, value }) => {\r\n        const { currency } = this.props;\r\n        const formattedDate = date.toFormat('dd MMMM yyyy HH:mm');\r\n        return (\r\n            <Typography variant='caption' className='hourly-chart-tooltip'>\r\n                <div className='date'>{formattedDate}</div>\r\n                <div className='category'>{id}</div>\r\n                <div className='description'>{description}</div>\r\n                <div className='value'>{`${value.toFixed(2)} ${currency}`}</div>\r\n            </Typography>\r\n        );\r\n    };\r\n\r\n\r\n    render() {\r\n        const { dataStructure, currency } = this.props;\r\n\r\n        if (!dataStructure || !currency) return <LinearProgress style={{ width: '100%' }} />;\r\n        if (dataStructure.length === 0) return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n\r\n        return (\r\n            <div className='chart-area'>\r\n\r\n                <ErrorBoundary>\r\n                    <ChartWrapper>\r\n\r\n                        <ResponsiveScatterPlot\r\n                            data={dataStructure}\r\n                            margin={{\r\n                                top: 20,\r\n                                right: 140,\r\n                                bottom: 70,\r\n                                left: 90,\r\n                            }}\r\n                            xScale={{\r\n                                type: 'time',\r\n                                format: '%Y-%m-%d',\r\n                                precision: 'day',\r\n                            }}\r\n                            yScale={{\r\n                                type: 'time',\r\n                                format: '%H:%M:%S',\r\n                                precision: 'minute',\r\n                            }}\r\n                            axisTop={null}\r\n                            axisRight={null}\r\n                            axisBottom={{\r\n                                orient: 'bottom',\r\n                                tickSize: 5,\r\n                                tickPadding: 5,\r\n                                tickRotation: 0,\r\n                                legend: 'day',\r\n                                legendPosition: 'middle',\r\n                                legendOffset: 46,\r\n                                format: d => DateTime.fromJSDate(d).toFormat('dd MMM'),\r\n\r\n                            }}\r\n                            axisLeft={{\r\n                                orient: 'left',\r\n                                tickSize: 5,\r\n                                tickPadding: 5,\r\n                                tickRotation: 0,\r\n                                legend: 'time',\r\n                                legendPosition: 'middle',\r\n                                legendOffset: -60,\r\n                                format: '%H:%M',\r\n                            }}\r\n                            colors='category10'\r\n                            animate={true}\r\n                            motionStiffness={90}\r\n                            motionDamping={15}\r\n                            legends={[\r\n                                {\r\n                                    anchor: 'bottom-right',\r\n                                    direction: 'column',\r\n                                    translateX: 130,\r\n                                    itemWidth: 100,\r\n                                    itemHeight: 12,\r\n                                    itemsSpacing: 5,\r\n                                    itemTextColor: '#999',\r\n                                    symbolSize: 12,\r\n                                    symbolShape: 'circle',\r\n                                    effects: [\r\n                                        {\r\n                                            on: 'hover',\r\n                                            style: {\r\n                                                itemTextColor: '#000',\r\n                                            },\r\n                                        },\r\n                                    ],\r\n                                },\r\n                            ]}\r\n                            symbolSize={this.getSymbolSize}\r\n                            onMouseMove={this.handleMouseMove}\r\n                            onMouseLeave={this.handleMouseLeave}\r\n                            tooltip={this.tooltip}\r\n                        />\r\n\r\n                    </ChartWrapper>\r\n                </ErrorBoundary>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHourlyChart.propTypes = {\r\n    dataStructure: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired, // category name\r\n            data: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    x: PropTypes.string.isRequired, // day\r\n                    y: PropTypes.string.isRequired, // time\r\n                }),\r\n            ).isRequired,\r\n        }),\r\n    ),\r\n    currency: PropTypes.string,\r\n};\r\n\r\nexport default HourlyChart;\r\n","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { DateTime } from 'luxon';\r\nimport LinearProgress from '@material-ui/core/es/LinearProgress/LinearProgress';\r\nimport Typography from '@material-ui/core/es/Typography/Typography';\r\nimport { ResponsiveLine } from '@nivo/line';\r\nimport ChartWrapper from './ChartWrapper';\r\n\r\n\r\nclass LineChart extends PureComponent {\r\n\r\n    tooltip = ({ id, data }) => {\r\n        const { currency } = this.props;\r\n        const formattedDate = DateTime.fromJSDate(id).toFormat('dd MMMM yyyy');\r\n        return (\r\n            <Typography variant='caption' className='line-chart-tooltip'>\r\n                <div className='date'>{formattedDate}</div>\r\n                <div className='data-summary'>\r\n                    {\r\n                        data.map(({ data: { y: value }, serie: { id: category } }, index) => (\r\n                            <React.Fragment key={index}>\r\n                                <div className='value'>{`${value.toFixed(2)} ${currency}`}</div>\r\n                                <div className='category'>{category}</div>\r\n                            </React.Fragment>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </Typography>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        const { dataStructure, currency } = this.props;\r\n\r\n        if (!dataStructure || !currency) return <LinearProgress style={{ width: '100%' }} />;\r\n        if (dataStructure.length === 0) return <h1 style={{ marginTop: '64px' }}>No data to display</h1>;\r\n\r\n        return (\r\n            <div className='chart-area'>\r\n                <ChartWrapper>\r\n\r\n                    <ResponsiveLine\r\n                        data={dataStructure}\r\n                        margin={{\r\n                            top: 50,\r\n                            right: 110,\r\n                            bottom: 50,\r\n                            left: 90,\r\n                        }}\r\n                        xScale={{\r\n                            type: 'time',\r\n                            format: '%Y-%m-%d',\r\n                            precision: 'day',\r\n                        }}\r\n                        yScale={{\r\n                            type: 'linear',\r\n                            stacked: false,\r\n                            min: 'auto',\r\n                            max: 'auto',\r\n                        }}\r\n                        axisTop={null}\r\n                        axisRight={null}\r\n                        axisBottom={{\r\n                            orient: 'bottom',\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: 'day',\r\n                            legendOffset: 36,\r\n                            legendPosition: 'middle',\r\n                            format: d => DateTime.fromJSDate(d).toFormat('dd MMM'),\r\n                        }}\r\n                        axisLeft={{\r\n                            orient: 'left',\r\n                            tickSize: 5,\r\n                            tickPadding: 5,\r\n                            tickRotation: 0,\r\n                            legend: currency,\r\n                            legendOffset: -70,\r\n                            legendPosition: 'middle',\r\n                            format: x => x.toFixed(2),\r\n                        }}\r\n                        dotSize={10}\r\n                        dotColor='inherit:darker(0.3)'\r\n                        dotBorderWidth={2}\r\n                        dotBorderColor='#ffffff'\r\n                        curve='monotoneX'\r\n                        enableDotLabel={false}\r\n                        dotLabel='y'\r\n                        dotLabelYOffset={-12}\r\n                        animate={true}\r\n                        motionStiffness={90}\r\n                        motionDamping={15}\r\n                        legends={[\r\n                            {\r\n                                anchor: 'bottom-right',\r\n                                direction: 'column',\r\n                                justify: false,\r\n                                translateX: 100,\r\n                                translateY: 0,\r\n                                itemsSpacing: 0,\r\n                                itemDirection: 'left-to-right',\r\n                                itemWidth: 80,\r\n                                itemHeight: 20,\r\n                                itemOpacity: 0.75,\r\n                                symbolSize: 12,\r\n                                symbolShape: 'circle',\r\n                                symbolBorderColor: 'rgba(0, 0, 0, .5)',\r\n                                effects: [\r\n                                    {\r\n                                        on: 'hover',\r\n                                        style: {\r\n                                            itemBackground: 'rgba(0, 0, 0, .03)',\r\n                                            itemOpacity: 1,\r\n                                        },\r\n                                    },\r\n                                ],\r\n                            },\r\n                        ]}\r\n                        tooltip={this.tooltip}\r\n                    />\r\n\r\n                </ChartWrapper>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLineChart.propTypes = {\r\n    dataStructure: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired, // category name\r\n            data: PropTypes.arrayOf(\r\n                PropTypes.shape({\r\n                    x: PropTypes.string.isRequired, // day\r\n                    y: PropTypes.number.isRequired, // value for day\r\n                }),\r\n            ).isRequired,\r\n        }),\r\n    ),\r\n    currency: PropTypes.string,\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { Component } from 'react';\r\nimport { Settings } from 'luxon';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\nimport auth from './services/authService';\r\nimport AlertServiceComponent, { alertService } from './services/alertService';\r\nimport LoginForm from './components/forms/LoginForm';\r\nimport Logout from './components/Logout';\r\nimport NotFound from './components/NotFound';\r\nimport ProtectedRoute from './components/common/route/ProtectedRoute';\r\nimport { theme } from './config/theme';\r\nimport RegisterForm from './components/forms/RegisterForm';\r\nimport { getCategories, getRootCategory } from './services/entities-services/categoryService';\r\nimport { translateErrorMessage } from './services/errorMessageService';\r\nimport {\r\n    filterEntriesByCategory, filterEntryByCategory,\r\n    filterEntryByDate,\r\n    getEntriesBetween,\r\n    getRecentEntries,\r\n    processEntries, processEntriesDate,\r\n    processEntry,\r\n    splitByDays,\r\n} from './services/entities-services/entryService';\r\nimport EntryList from './components/entry-list/EntryList';\r\nimport LinearProgress from '@material-ui/core/es/LinearProgress/LinearProgress';\r\nimport EntryListRecent from './components/entry-list/EntryListRecent';\r\nimport Navbar from './components/navigation/Navbar';\r\nimport BarChart from './components/charts/BarChart';\r\nimport CalendarChart from './components/charts/CalendarChart';\r\nimport SunburstChart from './components/charts/SunburstChart';\r\nimport {\r\n    prepareDataStructureForBarChart,\r\n    prepareDataStructureForCalendarChart, prepareDataStructureForHourlyChart, prepareDataStructureForLineChart,\r\n    prepareDataStructureForSunburstChart,\r\n} from './services/chartService';\r\nimport HourlyChart from './components/charts/HourlyChart';\r\nimport LineChart from './components/charts/LineChart';\r\nimport { getNavigatorLanguage } from './services/languageService';\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        user: null,\r\n        rootCategory: null,\r\n\r\n        recentEntries: null,\r\n\r\n        entries: null,\r\n        selectionSpec: null,\r\n        filteredEntries: null,\r\n    };\r\n\r\n    fetchCategories = async user => {\r\n        try {\r\n            if (!user) return;\r\n            const { data } = await getCategories();\r\n            const rootCategory = getRootCategory(data);\r\n            // alertService.info('Categories fetched.');\r\n            this.setState({ rootCategory });\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                alertService.warning('Error occured, please refresh page.');\r\n                translateErrorMessage(e.response.data.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    fetchRecentEntries = async () => {\r\n        try {\r\n            const { data: rawRecentEntries } = await getRecentEntries();\r\n            const recentEntries = processEntries(rawRecentEntries);\r\n            this.setState({ recentEntries });\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                alertService.warning('Error occured, please refresh page.');\r\n                translateErrorMessage(e.response.data.message);\r\n            }\r\n        }\r\n    };\r\n\r\n    handleRootCategoryChange = () => {\r\n        this.fetchCategories(this.state.user);\r\n    };\r\n\r\n    handleEntriesChange = (entry, operationType) => {\r\n        const addEntry = (entry, entries, filteredEntries, selectionSpec) => {\r\n            const processed = processEntry(entry);\r\n            const filteredByDate = filterEntryByDate(processed, selectionSpec);\r\n            const filteredByCategory = filterEntryByCategory(filteredByDate, selectionSpec);\r\n            return ({\r\n                entries: filteredByDate ? [...entries, filteredByDate] : entries,\r\n                filteredEntries: filteredByCategory ? [...filteredEntries, filteredByCategory] : filteredEntries,\r\n            });\r\n        };\r\n        const deleteEntry = (entry, entries, filteredEntries) => {\r\n            return ({\r\n                entries: entries.filter(e => e.idEntry !== entry.idEntry),\r\n                filteredEntries: filteredEntries.filter(e => e.idEntry !== entry.idEntry),\r\n            });\r\n        };\r\n\r\n        const operations = [\r\n            {\r\n                operation: 'add',\r\n                process: (entry, currentEntries, currentFilteredEntries, selectionSpec) => {\r\n                    return addEntry(entry, currentEntries, currentFilteredEntries, selectionSpec);\r\n                },\r\n            },\r\n            {\r\n                operation: 'edit',\r\n                process: (entry, currentEntries, currentFilteredEntries, selectionSpec) => {\r\n                    const { entries, filteredEntries } = deleteEntry(entry, currentEntries, currentFilteredEntries);\r\n                    return addEntry(entry, entries, filteredEntries, selectionSpec);\r\n                },\r\n            },\r\n            {\r\n                operation: 'delete',\r\n                process: (entry, currentEntries, currentFilteredEntries) => {\r\n                    return deleteEntry(entry, currentEntries, currentFilteredEntries);\r\n                },\r\n            },\r\n        ];\r\n\r\n        const { entries: currentEntries, filteredEntries: currentFilteredEntries, selectionSpec } = this.state;\r\n        const operation = operations.find(o => o.operation === operationType);\r\n        if (!operation) return;\r\n\r\n        const newState = operation.process(entry, currentEntries, currentFilteredEntries, selectionSpec);\r\n\r\n        this.setState(newState);\r\n        this.fetchRecentEntries(this.state.user);\r\n    };\r\n\r\n    handleSelectionSpecChange = async selectionSpec => {\r\n        try {\r\n            const { from, to } = selectionSpec;\r\n            const { entries: currentEntries, selectionSpec: currentSelectionSpec } = this.state;\r\n\r\n            let filteredEntries;\r\n\r\n            if (currentSelectionSpec) {\r\n                const { from: currentFrom, to: currentTo } = currentSelectionSpec;\r\n                if (+currentFrom === +from && +currentTo === +to) {\r\n                    filteredEntries = filterEntriesByCategory(currentEntries, selectionSpec);\r\n                    this.setState({ selectionSpec, filteredEntries });\r\n                    return;\r\n                }\r\n            }\r\n\r\n            const { data: rawEntries } = await getEntriesBetween(from, to);\r\n            const entries = processEntriesDate(rawEntries);\r\n            filteredEntries = filterEntriesByCategory(entries, selectionSpec);\r\n            this.setState({ entries, selectionSpec, filteredEntries });\r\n        } catch (e) {\r\n            if (e.response && [400, 401, 403].includes(e.response.status)) {\r\n                const errors = translateErrorMessage(e.response.data.message);\r\n                alertService.warning('Error occurred, entries cannot be fetched. Refresh Page.');\r\n                this.setState({ errors });\r\n            }\r\n        }\r\n    };\r\n\r\n    componentDidMount() {\r\n        Settings.defaultLocale = getNavigatorLanguage();\r\n\r\n        const user = auth.getCurrentUser();\r\n        this.setState({ user });\r\n\r\n        this.fetchCategories(user);\r\n    }\r\n\r\n    render() {\r\n        const { user, rootCategory, recentEntries, entries, selectionSpec, filteredEntries } = this.state;\r\n\r\n        return (\r\n            <MuiThemeProvider theme={theme}>\r\n\r\n                <AlertServiceComponent />\r\n\r\n                <Navbar\r\n                    user={user}\r\n                    rootCategory={rootCategory}\r\n                    onRootCategoryChange={this.handleRootCategoryChange}\r\n                    onEntriesChange={this.handleEntriesChange}\r\n                    onSelectionSpecChange={this.handleSelectionSpecChange}\r\n                >\r\n\r\n                    {\r\n                        (user && !rootCategory) ? <LinearProgress style={{width: '100%'}} /> : (\r\n                            <Switch>\r\n\r\n                                <ProtectedRoute exact path='/daily' render={props => (\r\n                                    <EntryList\r\n                                        rootCategory={rootCategory}\r\n                                        entriesByDay={splitByDays(filteredEntries)}\r\n                                        currency={user && user.currency}\r\n                                        onEntriesChange={this.handleEntriesChange}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <ProtectedRoute exact path='/recent' render={props => (\r\n                                    <EntryListRecent\r\n                                        rootCategory={rootCategory}\r\n                                        recentEntries={recentEntries}\r\n                                        currency={user && user.currency}\r\n                                        getRecentEntries={this.fetchRecentEntries}\r\n                                        onEntriesChange={this.handleEntriesChange}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <ProtectedRoute exact path='/barChart' render={props => (\r\n                                    <BarChart\r\n                                        dataStructure={prepareDataStructureForBarChart(filteredEntries, selectionSpec)}\r\n                                        currency={user && user.currency}\r\n                                        groupMode={false}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <ProtectedRoute exact path='/lineChart' render={props => (\r\n                                    <LineChart\r\n                                        dataStructure={prepareDataStructureForLineChart(filteredEntries, selectionSpec)}\r\n                                        currency={user && user.currency}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <ProtectedRoute exact path='/sunburstChart' render={props => (\r\n                                    <SunburstChart\r\n                                        dataStructure={prepareDataStructureForSunburstChart(entries, rootCategory)}\r\n                                        currency={user && user.currency}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <ProtectedRoute exact path='/hourlyChart' render={props => (\r\n                                    <HourlyChart\r\n                                        dataStructure={prepareDataStructureForHourlyChart(filteredEntries, selectionSpec)}\r\n                                        currency={user && user.currency}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <ProtectedRoute exact path='/calendarChart' render={props => (\r\n                                    <CalendarChart\r\n                                        dataStructure={prepareDataStructureForCalendarChart(entries, selectionSpec)}\r\n                                        currency={user && user.currency}\r\n                                        {...props}\r\n                                    />\r\n                                )} />\r\n\r\n                                <Route exact path='/register' component={RegisterForm} />\r\n                                <Route exact path='/login' component={LoginForm} />\r\n                                <Route exact path='/logout' component={Logout} />\r\n\r\n                                <Route exact path='/not-found' component={NotFound} />\r\n                                <Redirect from='/' exact to='/recent' />\r\n                                <Redirect to='/not-found' />\r\n                            </Switch>\r\n                        )\r\n                    }\r\n\r\n                </Navbar>\r\n\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","export function getNavigatorLanguage() {\r\n    const navigator = window.navigator;\r\n     if (navigator.languages && navigator.languages.length) {\r\n         return navigator.languages[0];\r\n     } else {\r\n         return navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\r\n     }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { SnackbarProvider } from 'notistack';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport './styles/index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport LuxonUtils from '@date-io/luxon';\nimport CssBaseline from '@material-ui/core/es/CssBaseline/CssBaseline';\n\nReactDOM.render(\n    <BrowserRouter>\n        <MuiPickersUtilsProvider utils={LuxonUtils}>\n            <CssBaseline />\n            <SnackbarProvider maxSnack={3}>\n                <App />\n            </SnackbarProvider>\n        </MuiPickersUtilsProvider>\n    </BrowserRouter>,\n\n    document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}